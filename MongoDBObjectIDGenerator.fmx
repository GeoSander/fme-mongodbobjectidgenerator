#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN MongoDBObjectIDGenerator,1,"Calculated Values",c4a7f582-9d17-11e7-9f8a-c42c033923d4,"Linked Always",No,NO_PARALLELISM,,No,17291,YES,No,2or3
# <p>Generates new MongoDB Document ID's (also known as BSON ObjectID's) or validates existing ones.<br />
# A BSON ObjectID is a 12 byte binary string that is built up as follows:</p>
# <ul>
# <li>a 4-byte value representing the seconds since the Unix epoch,  </li>
# <li>a 3-byte machine identifier,  </li>
# <li>a 2-byte process id, and  </li>
# <li>a 3-byte counter, starting with a random value.</li>
# </ul>
# <p>However, this transformer will validate/generate its 24 character hexadecimal string equivalent.</p>
# <p><strong>Why use this transformer?</strong><br />
# Although FME's MongoDB writer will generate MongoDB ID's automatically, there might be a case where you want to create documents that reference other documents by ObjectID. Therefore, you would need to generate an ID in advance, that will be written to the <em>mongodb_id</em> attribute. Note that you should rename this attribute (to anything you like) on the document feature if it uses this ObjectID <em>as a foreign key</em> (i.e. the "child"). Otherwise, the writer uses the ObjectID on both the "parent" and the "child" document as a <em>primary key</em>, which will fail.</p>
# <h3>Notes</h3>
# <ul>
# <li>This transformer uses the Node.js abilities of the <a href="https://www.safe.com/transformers/java-script-caller/">JavaScriptCaller</a>, which currently is a beta feature of FME.  </li>
# <li>There are no dependencies, because the code to generate the ObjectID's has been embedded. The original code can be found <a href="https://github.com/mongodb/js-bson/blob/1.0-branch/lib/bson/objectid.js">here</a>.  </li>
# <li>Released under <a href="https://github.com/SanderSchaminee/fme-mongodbobjectidgenerator/blob/master/LICENSE">GNU General Public License v3.0</a>.  </li>
# <li>If you notice a bug or desire a new feature, please contact me. Or make a <a href="https://github.com/SanderSchaminee/fme-mongodbobjectidgenerator">pull request</a>!</li>
# </ul>
# TRANSFORMER_END
#!   DOC_EXTENTS="2096.74 179.001"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FMX_INSERT_MODE="Linked Always"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   FME_DOCUMENT_PRIORGUID="4337abbe-4cfe-11e7-a562-f81edfe9847a,0414ccb6-4d01-11e7-be69-f81edfe9847a,1d0f0c9a-9d15-11e7-be1e-c42c033923d4"
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   USAGE="&lt;p&gt;&lt;strong&gt;Operation Mode&lt;/strong&gt;&lt;br /&gt;&#10;When set to &lt;em&gt;Generate&lt;/em&gt;, the transformer will create new MongoDB ObjectID&apos;s and store them in the &lt;em&gt;mongodb_id&lt;/em&gt; attribute. If the attribute exists, it will be overwritten (!).&lt;br /&gt;&#10;When set to &lt;em&gt;Validate&lt;/em&gt;, the transformer assumes that the &lt;em&gt;mongodb_id&lt;/em&gt; attribute exists and tries to validate it (see Overview). No ObjectID&apos;s will be created or overwritten in this mode. If a feature has an invalid ObjectID, it will be output through the &lt;em&gt;Rejected&lt;/em&gt; port. The failure reason will be stored in the attribute &lt;em&gt;mongodb_id_error&lt;/em&gt;.&lt;/p&gt;"
#!   TITLE="MongoDBObjectIDGenerator"
#!   LAST_SAVE_DATE="2017-09-19T10:51:46"
#!   FME_BUILD_NUM="17291"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   BLOCKED_LOOPING="No"
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   ZOOM_SCALE="100"
#!   FME_SERVER_SERVICES=""
#!   SHOW_ANNOTATIONS="true"
#!   DESCRIPTION="&lt;p&gt;Generates new MongoDB Document ID&apos;s (also known as BSON ObjectID&apos;s) or validates existing ones.&lt;br /&gt;&#10;A BSON ObjectID is a 12 byte binary string that is built up as follows:&lt;/p&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;a 4-byte value representing the seconds since the Unix epoch,  &lt;/li&gt;&#10;&lt;li&gt;a 3-byte machine identifier,  &lt;/li&gt;&#10;&lt;li&gt;a 2-byte process id, and  &lt;/li&gt;&#10;&lt;li&gt;a 3-byte counter, starting with a random value.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;p&gt;However, this transformer will validate/generate its 24 character hexadecimal string equivalent.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Why use this transformer?&lt;/strong&gt;&lt;br /&gt;&#10;Although FME&apos;s MongoDB writer will generate MongoDB ID&apos;s automatically, there might be a case where you want to create documents that reference other documents by ObjectID. Therefore, you would need to generate an ID in advance, that will be written to the &lt;em&gt;mongodb_id&lt;/em&gt; attribute. Note that you should rename this attribute (to anything you like) on the document feature if it uses this ObjectID &lt;em&gt;as a foreign key&lt;/em&gt; (i.e. the &quot;child&quot;). Otherwise, the writer uses the ObjectID on both the &quot;parent&quot; and the &quot;child&quot; document as a &lt;em&gt;primary key&lt;/em&gt;, which will fail.&lt;/p&gt;&#10;&lt;h3&gt;Notes&lt;/h3&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;This transformer uses the Node.js abilities of the &lt;a href=&quot;https://www.safe.com/transformers/java-script-caller/&quot;&gt;JavaScriptCaller&lt;/a&gt;, which currently is a beta feature of FME.  &lt;/li&gt;&#10;&lt;li&gt;There are no dependencies, because the code to generate the ObjectID&apos;s has been embedded. The original code can be found &lt;a href=&quot;https://github.com/mongodb/js-bson/blob/1.0-branch/lib/bson/objectid.js&quot;&gt;here&lt;/a&gt;.  &lt;/li&gt;&#10;&lt;li&gt;Released under &lt;a href=&quot;https://github.com/SanderSchaminee/fme-mongodbobjectidgenerator/blob/master/LICENSE&quot;&gt;GNU General Public License v3.0&lt;/a&gt;.  &lt;/li&gt;&#10;&lt;li&gt;If you notice a bug or desire a new feature, please contact me. Or make a &lt;a href=&quot;https://github.com/SanderSchaminee/fme-mongodbobjectidgenerator&quot;&gt;pull request&lt;/a&gt;!&lt;/li&gt;&#10;&lt;/ul&gt;"
#!   LAST_SAVE_BUILD="FME(R) 2017.0.1.1 (20170512 - Build 17291 - macosx)"
#!   PYTHON_COMPATIBILITY="2or3"
#!   MARKDOWN_DESCRIPTION="Generates new MongoDB Document ID&apos;s (also known as BSON ObjectID&apos;s) or validates existing ones.  &#10;A BSON ObjectID is a 12 byte binary string that is built up as follows:&#10;&#10;- a 4-byte value representing the seconds since the Unix epoch,  &#10;- a 3-byte machine identifier,  &#10;- a 2-byte process id, and  &#10;- a 3-byte counter, starting with a random value.&#10;&#10;However, this transformer will validate/generate its 24 character hexadecimal string equivalent.&#10;&#10;**Why use this transformer?**  &#10;Although FME&apos;s MongoDB writer will generate MongoDB ID&apos;s automatically, there might be a case where you want to create documents that reference other documents by ObjectID. Therefore, you would need to generate an ID in advance, that will be written to the _mongodb_id_ attribute. Note that you should rename this attribute (to anything you like) on the document feature if it uses this ObjectID _as a foreign key_ (i.e. the &quot;child&quot;). Otherwise, the writer uses the ObjectID on both the &quot;parent&quot; and the &quot;child&quot; document as a _primary key_, which will fail.&#10;&#10;### Notes&#10;- This transformer uses the Node.js abilities of the [JavaScriptCaller](https://www.safe.com/transformers/java-script-caller/), which currently is a beta feature of FME.  &#10;- There are no dependencies, because the code to generate the ObjectID&apos;s has been embedded. The original code can be found [here](https://github.com/mongodb/js-bson/blob/1.0-branch/lib/bson/objectid.js).  &#10;- Released under [GNU General Public License v3.0](https://github.com/SanderSchaminee/fme-mongodbobjectidgenerator/blob/master/LICENSE).  &#10;- If you notice a bug or desire a new feature, please contact me. Or make a [pull request](https://github.com/SanderSchaminee/fme-mongodbobjectidgenerator)!"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   MARKDOWN_USAGE="**Operation Mode**  &#10;When set to _Generate_, the transformer will create new MongoDB ObjectID&apos;s and store them in the _mongodb_id_ attribute. If the attribute exists, it will be overwritten (!).  &#10;When set to _Validate_, the transformer assumes that the _mongodb_id_ attribute exists and tries to validate it (see Overview). No ObjectID&apos;s will be created or overwritten in this mode. If a feature has an invalid ObjectID, it will be output through the _Rejected_ port. The failure reason will be stored in the attribute _mongodb_id_error_."
#!   DOC_TOP_LEFT="-775.366 -180.501"
#!   PASSWORD=""
#!   ITERATION_COUNT_ATTR=""
#!   SHOW_INFO_NODES="true"
#!   CATEGORY="Calculated Values"
#!   MAX_LOOP_ITERATIONS=""
#!   USE_MARKDOWN="YES"
#!   ATTR_TYPE_ENCODING="SDF"
#!   VIEW_POSITION="-879.009 177.002"
#!   FME_DOCUMENT_GUID="c4a7f582-9d17-11e7-9f8a-c42c033923d4"
#!   FME_PROCESS_GROUP_BY=""
#!   WORKSPACE_VERSION="1"
#!   XFORM_DEPRECATED="No"
#!   HISTORY="June&lt;space&gt;9&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Initial&lt;space&gt;creation,September&lt;space&gt;19&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Updated&lt;space&gt;docs&lt;comma&gt;&lt;space&gt;added&lt;space&gt;to&lt;space&gt;GitHub"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LITERAL CHOICE __OPERATION_MODE Generate%Validate Operation Mode:"
#!   DEFAULT_VALUE="Generate"
#!   IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="JavaScriptCaller"
#!   VERSION="1"
#!   POSITION="-257.367 -1.50001"
#!   BOUNDING_RECT="-257.367 -1.50001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__operation_mode" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="JSENGINE" PARM_VALUE="NODEJS"/>
#!     <XFORM_PARM PARM_NAME="JSSOURCE" PARM_VALUE="var&lt;space&gt;fme&lt;space&gt;=&lt;space&gt;require&lt;openparen&gt;&lt;apos&gt;fme&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;var&lt;space&gt;fmeobjects&lt;space&gt;=&lt;space&gt;require&lt;openparen&gt;&lt;apos&gt;fmeobjects&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;CODE&lt;space&gt;TO&lt;space&gt;GENERATE&lt;space&gt;A&lt;space&gt;BSON.ObjectID&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;TAKEN&lt;space&gt;FROM&lt;space&gt;https:&lt;solidus&gt;&lt;solidus&gt;github.com&lt;solidus&gt;mongodb&lt;solidus&gt;js-bson&lt;solidus&gt;blob&lt;solidus&gt;1.0-branch&lt;solidus&gt;lib&lt;solidus&gt;bson&lt;solidus&gt;objectid.js&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;&lt;space&gt;*&lt;space&gt;Machine&lt;space&gt;id.&lt;lf&gt;&lt;space&gt;*&lt;lf&gt;&lt;space&gt;*&lt;space&gt;Create&lt;space&gt;a&lt;space&gt;random&lt;space&gt;3-byte&lt;space&gt;value&lt;space&gt;&lt;openparen&gt;i.e.&lt;space&gt;unique&lt;space&gt;for&lt;space&gt;this&lt;lf&gt;&lt;space&gt;*&lt;space&gt;process&lt;closeparen&gt;.&lt;space&gt;Other&lt;space&gt;drivers&lt;space&gt;use&lt;space&gt;a&lt;space&gt;md5&lt;space&gt;of&lt;space&gt;the&lt;space&gt;machine&lt;space&gt;id&lt;space&gt;here&lt;comma&gt;&lt;space&gt;but&lt;lf&gt;&lt;space&gt;*&lt;space&gt;that&lt;space&gt;would&lt;space&gt;mean&lt;space&gt;an&lt;space&gt;asyc&lt;space&gt;call&lt;space&gt;to&lt;space&gt;gethostname&lt;comma&gt;&lt;space&gt;so&lt;space&gt;we&lt;space&gt;don&lt;apos&gt;t&lt;space&gt;bother.&lt;lf&gt;&lt;space&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;&lt;space&gt;*&lt;solidus&gt;&lt;lf&gt;var&lt;space&gt;MACHINE_ID&lt;space&gt;=&lt;space&gt;parseInt&lt;openparen&gt;Math.random&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;*&lt;space&gt;0xFFFFFF&lt;comma&gt;&lt;space&gt;10&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Regular&lt;space&gt;expression&lt;space&gt;that&lt;space&gt;checks&lt;space&gt;for&lt;space&gt;hex&lt;space&gt;value&lt;lf&gt;var&lt;space&gt;checkForHexRegExp&lt;space&gt;=&lt;space&gt;new&lt;space&gt;RegExp&lt;openparen&gt;&lt;quote&gt;^&lt;openbracket&gt;0-9a-fA-F&lt;closebracket&gt;&lt;opencurly&gt;24&lt;closecurly&gt;&lt;dollar&gt;&lt;quote&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;var&lt;space&gt;hasBufferType&lt;space&gt;=&lt;space&gt;false&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Check&lt;space&gt;if&lt;space&gt;buffer&lt;space&gt;exists&lt;lf&gt;try&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;Buffer&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;Buffer.from&lt;closeparen&gt;&lt;space&gt;hasBufferType&lt;space&gt;=&lt;space&gt;true&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;space&gt;catch&lt;openparen&gt;err&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Create&lt;space&gt;a&lt;space&gt;new&lt;space&gt;ObjectID&lt;space&gt;instance&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;class&lt;lf&gt;*&lt;space&gt;&lt;at&gt;param&lt;space&gt;&lt;opencurly&gt;&lt;openparen&gt;string|number&lt;closeparen&gt;&lt;closecurly&gt;&lt;space&gt;id&lt;space&gt;Can&lt;space&gt;be&lt;space&gt;a&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;comma&gt;&lt;space&gt;12&lt;space&gt;byte&lt;space&gt;binary&lt;space&gt;string&lt;space&gt;or&lt;space&gt;a&lt;space&gt;Number.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;property&lt;space&gt;&lt;opencurly&gt;number&lt;closecurly&gt;&lt;space&gt;generationTime&lt;space&gt;The&lt;space&gt;generation&lt;space&gt;time&lt;space&gt;of&lt;space&gt;this&lt;space&gt;ObjectId&lt;space&gt;instance&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;ObjectID&lt;closecurly&gt;&lt;space&gt;instance&lt;space&gt;of&lt;space&gt;ObjectID.&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;var&lt;space&gt;ObjectID&lt;space&gt;=&lt;space&gt;function&lt;space&gt;ObjectID&lt;openparen&gt;id&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Duck-typing&lt;space&gt;to&lt;space&gt;support&lt;space&gt;ObjectId&lt;space&gt;from&lt;space&gt;different&lt;space&gt;npm&lt;space&gt;packages&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;instanceof&lt;space&gt;ObjectID&lt;closeparen&gt;&lt;space&gt;return&lt;space&gt;id&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;!&lt;openparen&gt;this&lt;space&gt;instanceof&lt;space&gt;ObjectID&lt;closeparen&gt;&lt;closeparen&gt;&lt;space&gt;return&lt;space&gt;new&lt;space&gt;ObjectID&lt;openparen&gt;id&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;this._bsontype&lt;space&gt;=&lt;space&gt;&lt;apos&gt;ObjectID&lt;apos&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;The&lt;space&gt;most&lt;space&gt;common&lt;space&gt;usecase&lt;space&gt;&lt;openparen&gt;blank&lt;space&gt;id&lt;comma&gt;&lt;space&gt;new&lt;space&gt;objectId&lt;space&gt;instance&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;==&lt;space&gt;null&lt;space&gt;||&lt;space&gt;typeof&lt;space&gt;id&lt;space&gt;==&lt;space&gt;&lt;apos&gt;number&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Generate&lt;space&gt;a&lt;space&gt;new&lt;space&gt;id&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this.id&lt;space&gt;=&lt;space&gt;this.generate&lt;openparen&gt;id&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;If&lt;space&gt;we&lt;space&gt;are&lt;space&gt;caching&lt;space&gt;the&lt;space&gt;hex&lt;space&gt;string&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;ObjectID.cacheHexString&lt;closeparen&gt;&lt;space&gt;this.__id&lt;space&gt;=&lt;space&gt;this.toString&lt;openparen&gt;&lt;apos&gt;hex&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Return&lt;space&gt;the&lt;space&gt;object&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Check&lt;space&gt;if&lt;space&gt;the&lt;space&gt;passed&lt;space&gt;in&lt;space&gt;id&lt;space&gt;is&lt;space&gt;valid&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;valid&lt;space&gt;=&lt;space&gt;ObjectID.isValid&lt;openparen&gt;id&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Throw&lt;space&gt;an&lt;space&gt;error&lt;space&gt;if&lt;space&gt;it&lt;apos&gt;s&lt;space&gt;not&lt;space&gt;a&lt;space&gt;valid&lt;space&gt;setup&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;!valid&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;id&lt;space&gt;!=&lt;space&gt;null&lt;closeparen&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;throw&lt;space&gt;new&lt;space&gt;Error&lt;openparen&gt;&lt;quote&gt;&lt;apos&gt;mongodb_id&lt;apos&gt;&lt;space&gt;attribute&lt;space&gt;must&lt;space&gt;be&lt;space&gt;a&lt;space&gt;single&lt;space&gt;String&lt;space&gt;of&lt;space&gt;12&lt;space&gt;bytes&lt;space&gt;or&lt;space&gt;a&lt;space&gt;string&lt;space&gt;of&lt;space&gt;24&lt;space&gt;hex&lt;space&gt;characters&lt;quote&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;valid&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;typeof&lt;space&gt;id&lt;space&gt;==&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;id.length&lt;space&gt;==&lt;space&gt;24&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;hasBufferType&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;new&lt;space&gt;ObjectID&lt;openparen&gt;new&lt;space&gt;Buffer&lt;openparen&gt;id&lt;comma&gt;&lt;space&gt;&lt;apos&gt;hex&lt;apos&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;valid&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;typeof&lt;space&gt;id&lt;space&gt;==&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;id.length&lt;space&gt;==&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;ObjectID.createFromHexString&lt;openparen&gt;id&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;!=&lt;space&gt;null&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;id.length&lt;space&gt;===&lt;space&gt;12&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;assume&lt;space&gt;12&lt;space&gt;byte&lt;space&gt;string&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this.id&lt;space&gt;=&lt;space&gt;id&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;!=&lt;space&gt;null&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;id.toHexString&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Duck-typing&lt;space&gt;to&lt;space&gt;support&lt;space&gt;ObjectId&lt;space&gt;from&lt;space&gt;different&lt;space&gt;npm&lt;space&gt;packages&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;id&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;throw&lt;space&gt;new&lt;space&gt;Error&lt;openparen&gt;&lt;quote&gt;&lt;apos&gt;mongodb_id&lt;apos&gt;&lt;space&gt;attribute&lt;space&gt;must&lt;space&gt;be&lt;space&gt;a&lt;space&gt;single&lt;space&gt;String&lt;space&gt;of&lt;space&gt;12&lt;space&gt;bytes&lt;space&gt;or&lt;space&gt;a&lt;space&gt;string&lt;space&gt;of&lt;space&gt;24&lt;space&gt;hex&lt;space&gt;characters&lt;quote&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;ObjectID.cacheHexString&lt;closeparen&gt;&lt;space&gt;this.__id&lt;space&gt;=&lt;space&gt;this.toString&lt;openparen&gt;&lt;apos&gt;hex&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Allow&lt;space&gt;usage&lt;space&gt;of&lt;space&gt;ObjectId&lt;space&gt;as&lt;space&gt;well&lt;space&gt;as&lt;space&gt;ObjectID&lt;lf&gt;var&lt;space&gt;ObjectId&lt;space&gt;=&lt;space&gt;ObjectID&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Precomputed&lt;space&gt;hex&lt;space&gt;table&lt;space&gt;enables&lt;space&gt;speedy&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;conversion&lt;lf&gt;var&lt;space&gt;hexTable&lt;space&gt;=&lt;space&gt;&lt;openbracket&gt;&lt;closebracket&gt;&lt;semicolon&gt;&lt;lf&gt;for&lt;space&gt;&lt;openparen&gt;var&lt;space&gt;i&lt;space&gt;=&lt;space&gt;0&lt;semicolon&gt;&lt;space&gt;i&lt;space&gt;&lt;lt&gt;&lt;space&gt;256&lt;semicolon&gt;&lt;space&gt;i++&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;hexTable&lt;openbracket&gt;i&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;15&lt;space&gt;?&lt;space&gt;&lt;apos&gt;0&lt;apos&gt;&lt;space&gt;:&lt;space&gt;&lt;apos&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;+&lt;space&gt;i.toString&lt;openparen&gt;16&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Return&lt;space&gt;the&lt;space&gt;ObjectID&lt;space&gt;id&lt;space&gt;as&lt;space&gt;a&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;representation&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;string&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;representation.&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.toHexString&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;ObjectID.cacheHexString&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;this.__id&lt;closeparen&gt;&lt;space&gt;return&lt;space&gt;this.__id&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;hexString&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;apos&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;!this.id&lt;space&gt;||&lt;space&gt;!this.id.length&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;throw&lt;space&gt;new&lt;space&gt;Error&lt;openparen&gt;&lt;apos&gt;invalid&lt;space&gt;ObjectId&lt;comma&gt;&lt;space&gt;ObjectId.id&lt;space&gt;must&lt;space&gt;be&lt;space&gt;either&lt;space&gt;a&lt;space&gt;string&lt;space&gt;or&lt;space&gt;a&lt;space&gt;Buffer&lt;comma&gt;&lt;space&gt;but&lt;space&gt;is&lt;space&gt;&lt;openbracket&gt;&lt;apos&gt;&lt;space&gt;+&lt;space&gt;JSON.stringify&lt;openparen&gt;this.id&lt;closeparen&gt;&lt;space&gt;+&lt;space&gt;&lt;apos&gt;&lt;closebracket&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;this.id&lt;space&gt;instanceof&lt;space&gt;_Buffer&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;hexString&lt;space&gt;=&lt;space&gt;convertToHex&lt;openparen&gt;this.id&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;ObjectID.cacheHexString&lt;closeparen&gt;&lt;space&gt;this.__id&lt;space&gt;=&lt;space&gt;hexString&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;hexString&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;openparen&gt;var&lt;space&gt;i&lt;space&gt;=&lt;space&gt;0&lt;semicolon&gt;&lt;space&gt;i&lt;space&gt;&lt;lt&gt;&lt;space&gt;this.id.length&lt;semicolon&gt;&lt;space&gt;i++&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;hexString&lt;space&gt;+=&lt;space&gt;hexTable&lt;openbracket&gt;this.id.charCodeAt&lt;openparen&gt;i&lt;closeparen&gt;&lt;closebracket&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;ObjectID.cacheHexString&lt;closeparen&gt;&lt;space&gt;this.__id&lt;space&gt;=&lt;space&gt;hexString&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;hexString&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Update&lt;space&gt;the&lt;space&gt;ObjectID&lt;space&gt;index&lt;space&gt;used&lt;space&gt;in&lt;space&gt;generating&lt;space&gt;new&lt;space&gt;ObjectID&lt;apos&gt;s&lt;space&gt;on&lt;space&gt;the&lt;space&gt;driver&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;number&lt;closecurly&gt;&lt;space&gt;returns&lt;space&gt;next&lt;space&gt;index&lt;space&gt;value.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.get_inc&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;ObjectID.index&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;ObjectID.index&lt;space&gt;+&lt;space&gt;1&lt;closeparen&gt;&lt;space&gt;%&lt;space&gt;0xFFFFFF&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Update&lt;space&gt;the&lt;space&gt;ObjectID&lt;space&gt;index&lt;space&gt;used&lt;space&gt;in&lt;space&gt;generating&lt;space&gt;new&lt;space&gt;ObjectID&lt;apos&gt;s&lt;space&gt;on&lt;space&gt;the&lt;space&gt;driver&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;number&lt;closecurly&gt;&lt;space&gt;returns&lt;space&gt;next&lt;space&gt;index&lt;space&gt;value.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.getInc&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;this.get_inc&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Generate&lt;space&gt;a&lt;space&gt;12&lt;space&gt;byte&lt;space&gt;id&lt;space&gt;buffer&lt;space&gt;used&lt;space&gt;in&lt;space&gt;ObjectID&lt;apos&gt;s&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;param&lt;space&gt;&lt;opencurly&gt;number&lt;closecurly&gt;&lt;space&gt;&lt;openbracket&gt;time&lt;closebracket&gt;&lt;space&gt;optional&lt;space&gt;parameter&lt;space&gt;allowing&lt;space&gt;to&lt;space&gt;pass&lt;space&gt;in&lt;space&gt;a&lt;space&gt;second&lt;space&gt;based&lt;space&gt;timestamp.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;Buffer&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;12&lt;space&gt;byte&lt;space&gt;id&lt;space&gt;buffer&lt;space&gt;string.&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.generate&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;time&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;openparen&gt;&lt;apos&gt;number&lt;apos&gt;&lt;space&gt;!=&lt;space&gt;typeof&lt;space&gt;time&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;time&lt;space&gt;=&lt;space&gt;~~&lt;openparen&gt;Date.now&lt;openparen&gt;&lt;closeparen&gt;&lt;solidus&gt;1000&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Use&lt;space&gt;pid&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;pid&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;typeof&lt;space&gt;process&lt;space&gt;===&lt;space&gt;&lt;apos&gt;undefined&lt;apos&gt;&lt;space&gt;?&lt;space&gt;Math.floor&lt;openparen&gt;Math.random&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;*&lt;space&gt;100000&lt;closeparen&gt;&lt;space&gt;:&lt;space&gt;process.pid&lt;closeparen&gt;&lt;space&gt;%&lt;space&gt;0xFFFF&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;inc&lt;space&gt;=&lt;space&gt;this.get_inc&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Buffer&lt;space&gt;used&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;buffer&lt;space&gt;=&lt;space&gt;new&lt;space&gt;Buffer&lt;openparen&gt;12&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Encode&lt;space&gt;time&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;3&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;time&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;2&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;time&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;8&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;1&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;time&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;16&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;0&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;time&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Encode&lt;space&gt;machine&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;6&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;MACHINE_ID&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;5&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;MACHINE_ID&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;8&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;4&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;MACHINE_ID&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;16&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Encode&lt;space&gt;pid&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;8&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;pid&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;7&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;pid&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;8&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Encode&lt;space&gt;index&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;11&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;inc&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;10&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;inc&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;8&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;9&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;inc&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;16&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Return&lt;space&gt;the&lt;space&gt;buffer&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;buffer&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Converts&lt;space&gt;the&lt;space&gt;id&lt;space&gt;into&lt;space&gt;a&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;for&lt;space&gt;printing&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;param&lt;space&gt;&lt;opencurly&gt;String&lt;closecurly&gt;&lt;space&gt;format&lt;space&gt;The&lt;space&gt;Buffer&lt;space&gt;toString&lt;space&gt;format&lt;space&gt;parameter.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;String&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;representation.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.toString&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;format&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Is&lt;space&gt;the&lt;space&gt;id&lt;space&gt;a&lt;space&gt;buffer&lt;space&gt;then&lt;space&gt;use&lt;space&gt;the&lt;space&gt;buffer&lt;space&gt;toString&lt;space&gt;method&lt;space&gt;to&lt;space&gt;return&lt;space&gt;the&lt;space&gt;format&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;this.id&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;this.id.copy&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;this.id.toString&lt;openparen&gt;typeof&lt;space&gt;format&lt;space&gt;===&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;space&gt;?&lt;space&gt;format&lt;space&gt;:&lt;space&gt;&lt;apos&gt;hex&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;if&lt;openparen&gt;this.buffer&lt;space&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;this.toHexString&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Converts&lt;space&gt;to&lt;space&gt;a&lt;space&gt;string&lt;space&gt;representation&lt;space&gt;of&lt;space&gt;this&lt;space&gt;Id.&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;String&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;representation.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.inspect&lt;space&gt;=&lt;space&gt;ObjectID.prototype.toString&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Converts&lt;space&gt;to&lt;space&gt;its&lt;space&gt;JSON&lt;space&gt;representation.&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;String&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;representation.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.toJSON&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;this.toHexString&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Compares&lt;space&gt;the&lt;space&gt;equality&lt;space&gt;of&lt;space&gt;this&lt;space&gt;ObjectID&lt;space&gt;with&lt;space&gt;`otherID`.&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;param&lt;space&gt;&lt;opencurly&gt;object&lt;closecurly&gt;&lt;space&gt;otherID&lt;space&gt;ObjectID&lt;space&gt;instance&lt;space&gt;to&lt;space&gt;compare&lt;space&gt;against.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;boolean&lt;closecurly&gt;&lt;space&gt;the&lt;space&gt;result&lt;space&gt;of&lt;space&gt;comparing&lt;space&gt;two&lt;space&gt;ObjectID&lt;apos&gt;s&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.equals&lt;space&gt;=&lt;space&gt;function&lt;space&gt;equals&lt;space&gt;&lt;openparen&gt;otherId&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;id&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;otherId&lt;space&gt;instanceof&lt;space&gt;ObjectID&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;this.toString&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;==&lt;space&gt;otherId.toString&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;typeof&lt;space&gt;otherId&lt;space&gt;==&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;ObjectID.isValid&lt;openparen&gt;otherId&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;otherId.length&lt;space&gt;==&lt;space&gt;12&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;this.id&lt;space&gt;instanceof&lt;space&gt;_Buffer&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;otherId&lt;space&gt;===&lt;space&gt;this.id.toString&lt;openparen&gt;&lt;apos&gt;binary&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;typeof&lt;space&gt;otherId&lt;space&gt;==&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;ObjectID.isValid&lt;openparen&gt;otherId&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;otherId.length&lt;space&gt;==&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;otherId.toLowerCase&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;===&lt;space&gt;this.toHexString&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;typeof&lt;space&gt;otherId&lt;space&gt;==&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;ObjectID.isValid&lt;openparen&gt;otherId&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;otherId.length&lt;space&gt;==&lt;space&gt;12&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;otherId&lt;space&gt;===&lt;space&gt;this.id&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;if&lt;openparen&gt;otherId&lt;space&gt;!=&lt;space&gt;null&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;&lt;openparen&gt;otherId&lt;space&gt;instanceof&lt;space&gt;ObjectID&lt;space&gt;||&lt;space&gt;otherId.toHexString&lt;closeparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;otherId.toHexString&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;===&lt;space&gt;this.toHexString&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;false&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Returns&lt;space&gt;the&lt;space&gt;generation&lt;space&gt;date&lt;space&gt;&lt;openparen&gt;accurate&lt;space&gt;up&lt;space&gt;to&lt;space&gt;the&lt;space&gt;second&lt;closeparen&gt;&lt;space&gt;that&lt;space&gt;this&lt;space&gt;ID&lt;space&gt;was&lt;space&gt;generated.&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;date&lt;closecurly&gt;&lt;space&gt;the&lt;space&gt;generation&lt;space&gt;date&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.prototype.getTimestamp&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;timestamp&lt;space&gt;=&lt;space&gt;new&lt;space&gt;Date&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;time&lt;space&gt;=&lt;space&gt;this.id&lt;openbracket&gt;3&lt;closebracket&gt;&lt;space&gt;|&lt;space&gt;this.id&lt;openbracket&gt;2&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;8&lt;space&gt;|&lt;space&gt;this.id&lt;openbracket&gt;1&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;16&lt;space&gt;|&lt;space&gt;this.id&lt;openbracket&gt;0&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;24&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;timestamp.setTime&lt;openparen&gt;Math.floor&lt;openparen&gt;time&lt;closeparen&gt;&lt;space&gt;*&lt;space&gt;1000&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;timestamp&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.index&lt;space&gt;=&lt;space&gt;~~&lt;openparen&gt;Math.random&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;*&lt;space&gt;0xFFFFFF&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.createPk&lt;space&gt;=&lt;space&gt;function&lt;space&gt;createPk&lt;space&gt;&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;new&lt;space&gt;ObjectID&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Creates&lt;space&gt;an&lt;space&gt;ObjectID&lt;space&gt;from&lt;space&gt;a&lt;space&gt;second&lt;space&gt;based&lt;space&gt;number&lt;comma&gt;&lt;space&gt;with&lt;space&gt;the&lt;space&gt;rest&lt;space&gt;of&lt;space&gt;the&lt;space&gt;ObjectID&lt;space&gt;zeroed&lt;space&gt;out.&lt;space&gt;Used&lt;space&gt;for&lt;space&gt;comparisons&lt;space&gt;or&lt;space&gt;sorting&lt;space&gt;the&lt;space&gt;ObjectID.&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;param&lt;space&gt;&lt;opencurly&gt;number&lt;closecurly&gt;&lt;space&gt;time&lt;space&gt;an&lt;space&gt;integer&lt;space&gt;number&lt;space&gt;representing&lt;space&gt;a&lt;space&gt;number&lt;space&gt;of&lt;space&gt;seconds.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;ObjectID&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;created&lt;space&gt;ObjectID&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.createFromTime&lt;space&gt;=&lt;space&gt;function&lt;space&gt;createFromTime&lt;space&gt;&lt;openparen&gt;time&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;buffer&lt;space&gt;=&lt;space&gt;new&lt;space&gt;Buffer&lt;openparen&gt;&lt;openbracket&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;comma&gt;&lt;space&gt;0&lt;closebracket&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Encode&lt;space&gt;time&lt;space&gt;into&lt;space&gt;first&lt;space&gt;4&lt;space&gt;bytes&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;3&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;time&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;2&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;time&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;8&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;1&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;time&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;16&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;buffer&lt;openbracket&gt;0&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;time&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Return&lt;space&gt;the&lt;space&gt;new&lt;space&gt;objectId&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;new&lt;space&gt;ObjectID&lt;openparen&gt;buffer&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Lookup&lt;space&gt;tables&lt;lf&gt;var&lt;space&gt;encodeLookup&lt;space&gt;=&lt;space&gt;&lt;apos&gt;0123456789abcdef&lt;apos&gt;.split&lt;openparen&gt;&lt;apos&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;var&lt;space&gt;decodeLookup&lt;space&gt;=&lt;space&gt;&lt;openbracket&gt;&lt;closebracket&gt;&lt;lf&gt;var&lt;space&gt;i&lt;space&gt;=&lt;space&gt;0&lt;lf&gt;while&lt;space&gt;&lt;openparen&gt;i&lt;space&gt;&lt;lt&gt;&lt;space&gt;10&lt;closeparen&gt;&lt;space&gt;decodeLookup&lt;openbracket&gt;0x30&lt;space&gt;+&lt;space&gt;i&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;i++&lt;lf&gt;while&lt;space&gt;&lt;openparen&gt;i&lt;space&gt;&lt;lt&gt;&lt;space&gt;16&lt;closeparen&gt;&lt;space&gt;decodeLookup&lt;openbracket&gt;0x41&lt;space&gt;-&lt;space&gt;10&lt;space&gt;+&lt;space&gt;i&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;decodeLookup&lt;openbracket&gt;0x61&lt;space&gt;-&lt;space&gt;10&lt;space&gt;+&lt;space&gt;i&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;i++&lt;lf&gt;&lt;lf&gt;var&lt;space&gt;_Buffer&lt;space&gt;=&lt;space&gt;Buffer&lt;semicolon&gt;&lt;lf&gt;var&lt;space&gt;convertToHex&lt;space&gt;=&lt;space&gt;function&lt;openparen&gt;bytes&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;bytes.toString&lt;openparen&gt;&lt;apos&gt;hex&lt;apos&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Creates&lt;space&gt;an&lt;space&gt;ObjectID&lt;space&gt;from&lt;space&gt;a&lt;space&gt;hex&lt;space&gt;string&lt;space&gt;representation&lt;space&gt;of&lt;space&gt;an&lt;space&gt;ObjectID.&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;param&lt;space&gt;&lt;opencurly&gt;string&lt;closecurly&gt;&lt;space&gt;hexString&lt;space&gt;create&lt;space&gt;a&lt;space&gt;ObjectID&lt;space&gt;from&lt;space&gt;a&lt;space&gt;passed&lt;space&gt;in&lt;space&gt;24&lt;space&gt;byte&lt;space&gt;hexstring.&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;ObjectID&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;the&lt;space&gt;created&lt;space&gt;ObjectID&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.createFromHexString&lt;space&gt;=&lt;space&gt;function&lt;space&gt;createFromHexString&lt;space&gt;&lt;openparen&gt;string&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Throw&lt;space&gt;an&lt;space&gt;error&lt;space&gt;if&lt;space&gt;it&lt;apos&gt;s&lt;space&gt;not&lt;space&gt;a&lt;space&gt;valid&lt;space&gt;setup&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;typeof&lt;space&gt;string&lt;space&gt;===&lt;space&gt;&lt;apos&gt;undefined&lt;apos&gt;&lt;space&gt;||&lt;space&gt;string&lt;space&gt;!=&lt;space&gt;null&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;string.length&lt;space&gt;!=&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;throw&lt;space&gt;new&lt;space&gt;Error&lt;openparen&gt;&lt;quote&gt;Argument&lt;space&gt;passed&lt;space&gt;in&lt;space&gt;must&lt;space&gt;be&lt;space&gt;a&lt;space&gt;single&lt;space&gt;String&lt;space&gt;of&lt;space&gt;12&lt;space&gt;bytes&lt;space&gt;or&lt;space&gt;a&lt;space&gt;string&lt;space&gt;of&lt;space&gt;24&lt;space&gt;hex&lt;space&gt;characters&lt;quote&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Use&lt;space&gt;Buffer.from&lt;space&gt;method&lt;space&gt;if&lt;space&gt;available&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;hasBufferType&lt;closeparen&gt;&lt;space&gt;return&lt;space&gt;new&lt;space&gt;ObjectID&lt;openparen&gt;new&lt;space&gt;Buffer&lt;openparen&gt;string&lt;comma&gt;&lt;space&gt;&lt;apos&gt;hex&lt;apos&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Calculate&lt;space&gt;lengths&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;array&lt;space&gt;=&lt;space&gt;new&lt;space&gt;_Buffer&lt;openparen&gt;12&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;n&lt;space&gt;=&lt;space&gt;0&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;var&lt;space&gt;i&lt;space&gt;=&lt;space&gt;0&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;while&lt;space&gt;&lt;openparen&gt;i&lt;space&gt;&lt;lt&gt;&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;array&lt;openbracket&gt;n++&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;decodeLookup&lt;openbracket&gt;string.charCodeAt&lt;openparen&gt;i++&lt;closeparen&gt;&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;4&lt;space&gt;|&lt;space&gt;decodeLookup&lt;openbracket&gt;string.charCodeAt&lt;openparen&gt;i++&lt;closeparen&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;new&lt;space&gt;ObjectID&lt;openparen&gt;array&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;Checks&lt;space&gt;if&lt;space&gt;a&lt;space&gt;value&lt;space&gt;is&lt;space&gt;a&lt;space&gt;valid&lt;space&gt;bson&lt;space&gt;ObjectId&lt;lf&gt;*&lt;lf&gt;*&lt;space&gt;&lt;at&gt;method&lt;lf&gt;*&lt;space&gt;&lt;at&gt;return&lt;space&gt;&lt;opencurly&gt;boolean&lt;closecurly&gt;&lt;space&gt;return&lt;space&gt;true&lt;space&gt;if&lt;space&gt;the&lt;space&gt;value&lt;space&gt;is&lt;space&gt;a&lt;space&gt;valid&lt;space&gt;bson&lt;space&gt;ObjectId&lt;comma&gt;&lt;space&gt;return&lt;space&gt;false&lt;space&gt;otherwise.&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;ObjectID.isValid&lt;space&gt;=&lt;space&gt;function&lt;space&gt;isValid&lt;openparen&gt;id&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;==&lt;space&gt;null&lt;closeparen&gt;&lt;space&gt;return&lt;space&gt;false&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;typeof&lt;space&gt;id&lt;space&gt;==&lt;space&gt;&lt;apos&gt;number&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;true&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;typeof&lt;space&gt;id&lt;space&gt;==&lt;space&gt;&lt;apos&gt;string&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;id.length&lt;space&gt;==&lt;space&gt;12&lt;space&gt;||&lt;space&gt;&lt;openparen&gt;id.length&lt;space&gt;==&lt;space&gt;24&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;checkForHexRegExp.test&lt;openparen&gt;id&lt;closeparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;instanceof&lt;space&gt;ObjectID&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;true&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;id&lt;space&gt;instanceof&lt;space&gt;_Buffer&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;true&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Duck-Typing&lt;space&gt;detection&lt;space&gt;of&lt;space&gt;ObjectId&lt;space&gt;like&lt;space&gt;objects&lt;lf&gt;&lt;space&gt;&lt;space&gt;if&lt;openparen&gt;id.toHexString&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;id.id.length&lt;space&gt;==&lt;space&gt;12&lt;space&gt;||&lt;space&gt;&lt;openparen&gt;id.id.length&lt;space&gt;==&lt;space&gt;24&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;checkForHexRegExp.test&lt;openparen&gt;id.id&lt;closeparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;false&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;*&lt;space&gt;&lt;at&gt;ignore&lt;lf&gt;*&lt;solidus&gt;&lt;lf&gt;Object.defineProperty&lt;openparen&gt;ObjectID.prototype&lt;comma&gt;&lt;space&gt;&lt;quote&gt;generationTime&lt;quote&gt;&lt;comma&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;enumerable:&lt;space&gt;true&lt;lf&gt;&lt;space&gt;&lt;comma&gt;&lt;space&gt;get:&lt;space&gt;function&lt;space&gt;&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;this.id&lt;openbracket&gt;3&lt;closebracket&gt;&lt;space&gt;|&lt;space&gt;this.id&lt;openbracket&gt;2&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;8&lt;space&gt;|&lt;space&gt;this.id&lt;openbracket&gt;1&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;16&lt;space&gt;|&lt;space&gt;this.id&lt;openbracket&gt;0&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;lt&gt;&lt;space&gt;24&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;comma&gt;&lt;space&gt;set:&lt;space&gt;function&lt;space&gt;&lt;openparen&gt;value&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;Encode&lt;space&gt;time&lt;space&gt;into&lt;space&gt;first&lt;space&gt;4&lt;space&gt;bytes&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this.id&lt;openbracket&gt;3&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;value&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this.id&lt;openbracket&gt;2&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;value&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;8&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this.id&lt;openbracket&gt;1&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;value&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;16&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this.id&lt;openbracket&gt;0&lt;closebracket&gt;&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;value&lt;space&gt;&lt;gt&gt;&lt;gt&gt;&lt;space&gt;24&lt;closeparen&gt;&lt;space&gt;&lt;amp&gt;&lt;space&gt;0xff&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;**&lt;lf&gt;&lt;space&gt;*&lt;space&gt;Expose.&lt;lf&gt;&lt;space&gt;*&lt;solidus&gt;&lt;lf&gt;module.exports&lt;space&gt;=&lt;space&gt;ObjectID&lt;semicolon&gt;&lt;lf&gt;module.exports.ObjectID&lt;space&gt;=&lt;space&gt;ObjectID&lt;semicolon&gt;&lt;lf&gt;module.exports.ObjectId&lt;space&gt;=&lt;space&gt;ObjectID&lt;semicolon&gt;&lt;lf&gt;&lt;lf&gt;&lt;lf&gt;&lt;solidus&gt;&lt;solidus&gt;&lt;space&gt;FME&lt;space&gt;CODE&lt;space&gt;TO&lt;space&gt;CHECK&lt;solidus&gt;GENERATE&lt;space&gt;MONGODB&lt;space&gt;OBJECTID&lt;apos&gt;S&lt;lf&gt;fme.on&lt;openparen&gt;&lt;apos&gt;feature&lt;apos&gt;&lt;comma&gt;&lt;space&gt;&lt;openparen&gt;feature&lt;closeparen&gt;&lt;space&gt;=&lt;gt&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;operation&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__operation_mode&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;openparen&gt;operation&lt;space&gt;==&lt;space&gt;&lt;apos&gt;Validate&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;oid&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;mongodb_id&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;ObjectID&lt;openparen&gt;oid&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;catch&lt;openparen&gt;err&lt;closeparen&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;&lt;apos&gt;mongodb_id_error&lt;apos&gt;&lt;comma&gt;&lt;space&gt;err.message&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fme.output&lt;openparen&gt;feature&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;oid&lt;space&gt;=&lt;space&gt;ObjectID&lt;openparen&gt;&lt;closeparen&gt;.toJSON&lt;openparen&gt;&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;&lt;apos&gt;mongodb_id&lt;apos&gt;&lt;comma&gt;&lt;space&gt;oid&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fme.output&lt;openparen&gt;feature&lt;closeparen&gt;&lt;semicolon&gt;&lt;lf&gt;&lt;closecurly&gt;&lt;closeparen&gt;&lt;semicolon&gt;"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="JavaScriptCaller"/>
#!     <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE="mongodb_id mongodb_id_error"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="Tester"
#!   VERSION="2"
#!   POSITION="269.366 -1.50001"
#!   BOUNDING_RECT="269.366 -1.50001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__operation_mode" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__operation_mode" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;mongodb_id_error&lt;closeparen&gt; NOT_ATTRIBUTE_HAS_VALUE &quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="11"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="797.008 -1.50001"
#!   BOUNDING_RECT="797.008 -1.50001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="mongodb_id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__operation_mode,mongodb_id_error"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="14"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="797.008 -180.501"
#!   BOUNDING_RECT="797.008 -180.501 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="mongodb_id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="mongodb_id_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__operation_mode"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_2"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="5"
#!   NAME="Output"
#!   POSITION="1321.37 -1.50001"
#!   BOUNDING_RECT="1321.37 -1.50001 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="7"
#!   NAME="&lt;Rejected&gt;"
#!   POSITION="1321.37 -180.501"
#!   BOUNDING_RECT="1321.37 -180.501 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="9"
#!   NAME="Input"
#!   POSITION="-775.366 -1.50001"
#!   BOUNDING_RECT="-775.366 -1.50001 -1 -1"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#!     <XFORM_ATTR ATTR_NAME="__operation_mode" ATTR_VALUE="$(__OPERATION_MODE)" />
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="10"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="4"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="12"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="11"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="13"
#!   SOURCE_NODE="11"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="14"
#!   TARGET_NODE="7"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="14"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>
DEFAULT_MACRO $(MongoDBObjectIDGenerator_WORKSPACE_NAME)___OPERATION_MODE Generate
#! START_HEADER
#! END_HEADER

LOG_FILTER_MASK -1
DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO MongoDBObjectIDGenerator_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(MongoDBObjectIDGenerator_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(MongoDBObjectIDGenerator_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Input1505811106 Input Splitter"   INPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Input" "@EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV,__operation_mode,$($(MongoDBObjectIDGenerator_WORKSPACE_NAME)___OPERATION_MODE$encode), FEATURE_TYPE)"
# -------------------------------------------------------------------------

FME_NODE_PATH "$(FME_MF_DIR)"
INCLUDE [    if { ("NODEJS" == "NODEJS") } {       puts "MACRO USE_NODEJS_FACTORY *";       puts "MACRO USE_JAVASCRIPT_FACTORY NOT_THIS_TIME";    } else {       puts "MACRO USE_NODEJS_FACTORY NOT_THIS_TIME";       puts "MACRO USE_JAVASCRIPT_FACTORY *";    } ]
FACTORY_DEF $(USE_NODEJS_FACTORY) NodeJSFactory    FACTORY_NAME $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller    INPUT  FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Input"    SOURCE_CODE "@EvaluateExpression(FDIV,STRING_ENCODED,var<space>fme<space>=<space>require<openparen><apos>fme<apos><closeparen><semicolon><lf>var<space>fmeobjects<space>=<space>require<openparen><apos>fmeobjects<apos><closeparen><semicolon><lf><lf><solidus><solidus><space>CODE<space>TO<space>GENERATE<space>A<space>BSON.ObjectID<lf><solidus><solidus><space>TAKEN<space>FROM<space>https:<solidus><solidus>github.com<solidus>mongodb<solidus>js-bson<solidus>blob<solidus>1.0-branch<solidus>lib<solidus>bson<solidus>objectid.js<lf><lf><solidus>**<lf><space>*<space>Machine<space>id.<lf><space>*<lf><space>*<space>Create<space>a<space>random<space>3-byte<space>value<space><openparen>i.e.<space>unique<space>for<space>this<lf><space>*<space>process<closeparen>.<space>Other<space>drivers<space>use<space>a<space>md5<space>of<space>the<space>machine<space>id<space>here<comma><space>but<lf><space>*<space>that<space>would<space>mean<space>an<space>asyc<space>call<space>to<space>gethostname<comma><space>so<space>we<space>don<apos>t<space>bother.<lf><space>*<space><at>ignore<lf><space>*<solidus><lf>var<space>MACHINE_ID<space>=<space>parseInt<openparen>Math.random<openparen><closeparen><space>*<space>0xFFFFFF<comma><space>10<closeparen><semicolon><lf><lf><solidus><solidus><space>Regular<space>expression<space>that<space>checks<space>for<space>hex<space>value<lf>var<space>checkForHexRegExp<space>=<space>new<space>RegExp<openparen><quote>^<openbracket>0-9a-fA-F<closebracket><opencurly>24<closecurly><dollar><quote><closeparen><semicolon><lf>var<space>hasBufferType<space>=<space>false<semicolon><lf><lf><solidus><solidus><space>Check<space>if<space>buffer<space>exists<lf>try<space><opencurly><lf><space><space>if<openparen>Buffer<space><amp><amp><space>Buffer.from<closeparen><space>hasBufferType<space>=<space>true<semicolon><lf><closecurly><space>catch<openparen>err<closeparen><space><opencurly><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Create<space>a<space>new<space>ObjectID<space>instance<lf>*<lf>*<space><at>class<lf>*<space><at>param<space><opencurly><openparen>string|number<closeparen><closecurly><space>id<space>Can<space>be<space>a<space>24<space>byte<space>hex<space>string<comma><space>12<space>byte<space>binary<space>string<space>or<space>a<space>Number.<lf>*<space><at>property<space><opencurly>number<closecurly><space>generationTime<space>The<space>generation<space>time<space>of<space>this<space>ObjectId<space>instance<lf>*<space><at>return<space><opencurly>ObjectID<closecurly><space>instance<space>of<space>ObjectID.<lf>*<solidus><lf>var<space>ObjectID<space>=<space>function<space>ObjectID<openparen>id<closeparen><space><opencurly><lf><space><space><solidus><solidus><space>Duck-typing<space>to<space>support<space>ObjectId<space>from<space>different<space>npm<space>packages<lf><space><space>if<openparen>id<space>instanceof<space>ObjectID<closeparen><space>return<space>id<semicolon><lf><space><space>if<openparen>!<openparen>this<space>instanceof<space>ObjectID<closeparen><closeparen><space>return<space>new<space>ObjectID<openparen>id<closeparen><semicolon><lf><lf><space><space>this._bsontype<space>=<space><apos>ObjectID<apos><semicolon><lf><lf><space><space><solidus><solidus><space>The<space>most<space>common<space>usecase<space><openparen>blank<space>id<comma><space>new<space>objectId<space>instance<closeparen><lf><space><space>if<openparen>id<space>==<space>null<space>||<space>typeof<space>id<space>==<space><apos>number<apos><closeparen><space><opencurly><lf><space><space><space><space><solidus><solidus><space>Generate<space>a<space>new<space>id<lf><space><space><space><space>this.id<space>=<space>this.generate<openparen>id<closeparen><semicolon><lf><space><space><space><space><solidus><solidus><space>If<space>we<space>are<space>caching<space>the<space>hex<space>string<lf><space><space><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>this.toString<openparen><apos>hex<apos><closeparen><semicolon><lf><space><space><space><space><solidus><solidus><space>Return<space>the<space>object<lf><space><space><space><space>return<semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Check<space>if<space>the<space>passed<space>in<space>id<space>is<space>valid<lf><space><space>var<space>valid<space>=<space>ObjectID.isValid<openparen>id<closeparen><semicolon><lf><lf><space><space><solidus><solidus><space>Throw<space>an<space>error<space>if<space>it<apos>s<space>not<space>a<space>valid<space>setup<lf><space><space>if<openparen>!valid<space><amp><amp><space>id<space>!=<space>null<closeparen><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><quote><apos>mongodb_id<apos><space>attribute<space>must<space>be<space>a<space>single<space>String<space>of<space>12<space>bytes<space>or<space>a<space>string<space>of<space>24<space>hex<space>characters<quote><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>valid<space><amp><amp><space>typeof<space>id<space>==<space><apos>string<apos><space><amp><amp><space>id.length<space>==<space>24<space><amp><amp><space>hasBufferType<closeparen><space><opencurly><lf><space><space><space><space>return<space>new<space>ObjectID<openparen>new<space>Buffer<openparen>id<comma><space><apos>hex<apos><closeparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>valid<space><amp><amp><space>typeof<space>id<space>==<space><apos>string<apos><space><amp><amp><space>id.length<space>==<space>24<closeparen><space><opencurly><lf><space><space><space><space>return<space>ObjectID.createFromHexString<openparen>id<closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>id<space>!=<space>null<space><amp><amp><space>id.length<space>===<space>12<closeparen><space><opencurly><lf><space><space><space><space><solidus><solidus><space>assume<space>12<space>byte<space>string<lf><space><space><space><space>this.id<space>=<space>id<semicolon><lf><space><space><closecurly><space>else<space>if<openparen>id<space>!=<space>null<space><amp><amp><space>id.toHexString<closeparen><space><opencurly><lf><space><space><space><space><solidus><solidus><space>Duck-typing<space>to<space>support<space>ObjectId<space>from<space>different<space>npm<space>packages<lf><space><space><space><space>return<space>id<semicolon><lf><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><quote><apos>mongodb_id<apos><space>attribute<space>must<space>be<space>a<space>single<space>String<space>of<space>12<space>bytes<space>or<space>a<space>string<space>of<space>24<space>hex<space>characters<quote><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>this.toString<openparen><apos>hex<apos><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus><solidus><space>Allow<space>usage<space>of<space>ObjectId<space>as<space>well<space>as<space>ObjectID<lf>var<space>ObjectId<space>=<space>ObjectID<semicolon><lf><lf><solidus><solidus><space>Precomputed<space>hex<space>table<space>enables<space>speedy<space>hex<space>string<space>conversion<lf>var<space>hexTable<space>=<space><openbracket><closebracket><semicolon><lf>for<space><openparen>var<space>i<space>=<space>0<semicolon><space>i<space><lt><space>256<semicolon><space>i++<closeparen><space><opencurly><lf><space><space>hexTable<openbracket>i<closebracket><space>=<space><openparen>i<space><lt>=<space>15<space>?<space><apos>0<apos><space>:<space><apos><apos><closeparen><space>+<space>i.toString<openparen>16<closeparen><semicolon><lf><closecurly><lf><lf><solidus>**<lf>*<space>Return<space>the<space>ObjectID<space>id<space>as<space>a<space>24<space>byte<space>hex<space>string<space>representation<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>string<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<solidus><lf>ObjectID.prototype.toHexString<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>if<openparen>ObjectID.cacheHexString<space><amp><amp><space>this.__id<closeparen><space>return<space>this.__id<semicolon><lf><lf><space><space>var<space>hexString<space>=<space><apos><apos><semicolon><lf><space><space>if<openparen>!this.id<space>||<space>!this.id.length<closeparen><space><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><apos>invalid<space>ObjectId<comma><space>ObjectId.id<space>must<space>be<space>either<space>a<space>string<space>or<space>a<space>Buffer<comma><space>but<space>is<space><openbracket><apos><space>+<space>JSON.stringify<openparen>this.id<closeparen><space>+<space><apos><closebracket><apos><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>this.id<space>instanceof<space>_Buffer<closeparen><space><opencurly><lf><space><space><space><space>hexString<space>=<space>convertToHex<openparen>this.id<closeparen><semicolon><lf><space><space><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>hexString<semicolon><lf><space><space><space><space>return<space>hexString<semicolon><lf><space><space><closecurly><lf><lf><space><space>for<space><openparen>var<space>i<space>=<space>0<semicolon><space>i<space><lt><space>this.id.length<semicolon><space>i++<closeparen><space><opencurly><lf><space><space><space><space>hexString<space>+=<space>hexTable<openbracket>this.id.charCodeAt<openparen>i<closeparen><closebracket><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>hexString<semicolon><lf><space><space>return<space>hexString<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Update<space>the<space>ObjectID<space>index<space>used<space>in<space>generating<space>new<space>ObjectID<apos>s<space>on<space>the<space>driver<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>number<closecurly><space>returns<space>next<space>index<space>value.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.get_inc<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>return<space>ObjectID.index<space>=<space><openparen>ObjectID.index<space>+<space>1<closeparen><space>%<space>0xFFFFFF<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Update<space>the<space>ObjectID<space>index<space>used<space>in<space>generating<space>new<space>ObjectID<apos>s<space>on<space>the<space>driver<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>number<closecurly><space>returns<space>next<space>index<space>value.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.getInc<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>return<space>this.get_inc<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Generate<space>a<space>12<space>byte<space>id<space>buffer<space>used<space>in<space>ObjectID<apos>s<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>number<closecurly><space><openbracket>time<closebracket><space>optional<space>parameter<space>allowing<space>to<space>pass<space>in<space>a<space>second<space>based<space>timestamp.<lf>*<space><at>return<space><opencurly>Buffer<closecurly><space>return<space>the<space>12<space>byte<space>id<space>buffer<space>string.<lf>*<solidus><lf>ObjectID.prototype.generate<space>=<space>function<openparen>time<closeparen><space><opencurly><lf><space><space>if<space><openparen><apos>number<apos><space>!=<space>typeof<space>time<closeparen><space><opencurly><lf><space><space><space><space>time<space>=<space>~~<openparen>Date.now<openparen><closeparen><solidus>1000<closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Use<space>pid<lf><space><space>var<space>pid<space>=<space><openparen>typeof<space>process<space>===<space><apos>undefined<apos><space>?<space>Math.floor<openparen>Math.random<openparen><closeparen><space>*<space>100000<closeparen><space>:<space>process.pid<closeparen><space>%<space>0xFFFF<semicolon><lf><space><space>var<space>inc<space>=<space>this.get_inc<openparen><closeparen><semicolon><lf><space><space><solidus><solidus><space>Buffer<space>used<lf><space><space>var<space>buffer<space>=<space>new<space>Buffer<openparen>12<closeparen><semicolon><lf><space><space><solidus><solidus><space>Encode<space>time<lf><space><space>buffer<openbracket>3<closebracket><space>=<space>time<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>2<closebracket><space>=<space><openparen>time<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>1<closebracket><space>=<space><openparen>time<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>0<closebracket><space>=<space><openparen>time<space><gt><gt><space>24<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Encode<space>machine<lf><space><space>buffer<openbracket>6<closebracket><space>=<space>MACHINE_ID<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>5<closebracket><space>=<space><openparen>MACHINE_ID<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>4<closebracket><space>=<space><openparen>MACHINE_ID<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Encode<space>pid<lf><space><space>buffer<openbracket>8<closebracket><space>=<space>pid<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>7<closebracket><space>=<space><openparen>pid<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Encode<space>index<lf><space><space>buffer<openbracket>11<closebracket><space>=<space>inc<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>10<closebracket><space>=<space><openparen>inc<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>9<closebracket><space>=<space><openparen>inc<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Return<space>the<space>buffer<lf><space><space>return<space>buffer<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Converts<space>the<space>id<space>into<space>a<space>24<space>byte<space>hex<space>string<space>for<space>printing<lf>*<lf>*<space><at>param<space><opencurly>String<closecurly><space>format<space>The<space>Buffer<space>toString<space>format<space>parameter.<lf>*<space><at>return<space><opencurly>String<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.toString<space>=<space>function<openparen>format<closeparen><space><opencurly><lf><space><space><solidus><solidus><space>Is<space>the<space>id<space>a<space>buffer<space>then<space>use<space>the<space>buffer<space>toString<space>method<space>to<space>return<space>the<space>format<lf><space><space>if<openparen>this.id<space><amp><amp><space>this.id.copy<closeparen><space><opencurly><lf><space><space><space><space>return<space>this.id.toString<openparen>typeof<space>format<space>===<space><apos>string<apos><space>?<space>format<space>:<space><apos>hex<apos><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>if<openparen>this.buffer<space><closeparen><lf><space><space>return<space>this.toHexString<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Converts<space>to<space>a<space>string<space>representation<space>of<space>this<space>Id.<lf>*<lf>*<space><at>return<space><opencurly>String<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.inspect<space>=<space>ObjectID.prototype.toString<semicolon><lf><lf><solidus>**<lf>*<space>Converts<space>to<space>its<space>JSON<space>representation.<lf>*<lf>*<space><at>return<space><opencurly>String<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.toJSON<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>return<space>this.toHexString<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Compares<space>the<space>equality<space>of<space>this<space>ObjectID<space>with<space>`otherID`.<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>object<closecurly><space>otherID<space>ObjectID<space>instance<space>to<space>compare<space>against.<lf>*<space><at>return<space><opencurly>boolean<closecurly><space>the<space>result<space>of<space>comparing<space>two<space>ObjectID<apos>s<lf>*<solidus><lf>ObjectID.prototype.equals<space>=<space>function<space>equals<space><openparen>otherId<closeparen><space><opencurly><lf><space><space>var<space>id<semicolon><lf><lf><space><space>if<openparen>otherId<space>instanceof<space>ObjectID<closeparen><space><opencurly><lf><space><space><space><space>return<space>this.toString<openparen><closeparen><space>==<space>otherId.toString<openparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>typeof<space>otherId<space>==<space><apos>string<apos><space><amp><amp><space>ObjectID.isValid<openparen>otherId<closeparen><space><amp><amp><space>otherId.length<space>==<space>12<space><amp><amp><space>this.id<space>instanceof<space>_Buffer<closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId<space>===<space>this.id.toString<openparen><apos>binary<apos><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>typeof<space>otherId<space>==<space><apos>string<apos><space><amp><amp><space>ObjectID.isValid<openparen>otherId<closeparen><space><amp><amp><space>otherId.length<space>==<space>24<closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId.toLowerCase<openparen><closeparen><space>===<space>this.toHexString<openparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>typeof<space>otherId<space>==<space><apos>string<apos><space><amp><amp><space>ObjectID.isValid<openparen>otherId<closeparen><space><amp><amp><space>otherId.length<space>==<space>12<closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId<space>===<space>this.id<semicolon><lf><space><space><closecurly><space>else<space>if<openparen>otherId<space>!=<space>null<space><amp><amp><space><openparen>otherId<space>instanceof<space>ObjectID<space>||<space>otherId.toHexString<closeparen><closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId.toHexString<openparen><closeparen><space>===<space>this.toHexString<openparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space>return<space>false<semicolon><lf><space><space><closecurly><lf><closecurly><lf><lf><solidus>**<lf>*<space>Returns<space>the<space>generation<space>date<space><openparen>accurate<space>up<space>to<space>the<space>second<closeparen><space>that<space>this<space>ID<space>was<space>generated.<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>date<closecurly><space>the<space>generation<space>date<lf>*<solidus><lf>ObjectID.prototype.getTimestamp<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>var<space>timestamp<space>=<space>new<space>Date<openparen><closeparen><semicolon><lf><space><space>var<space>time<space>=<space>this.id<openbracket>3<closebracket><space>|<space>this.id<openbracket>2<closebracket><space><lt><lt><space>8<space>|<space>this.id<openbracket>1<closebracket><space><lt><lt><space>16<space>|<space>this.id<openbracket>0<closebracket><space><lt><lt><space>24<semicolon><lf><space><space>timestamp.setTime<openparen>Math.floor<openparen>time<closeparen><space>*<space>1000<closeparen><semicolon><lf><space><space>return<space>timestamp<semicolon><lf><closecurly><lf><lf><solidus>**<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.index<space>=<space>~~<openparen>Math.random<openparen><closeparen><space>*<space>0xFFFFFF<closeparen><semicolon><lf><lf><solidus>**<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.createPk<space>=<space>function<space>createPk<space><openparen><closeparen><space><opencurly><lf><space><space>return<space>new<space>ObjectID<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Creates<space>an<space>ObjectID<space>from<space>a<space>second<space>based<space>number<comma><space>with<space>the<space>rest<space>of<space>the<space>ObjectID<space>zeroed<space>out.<space>Used<space>for<space>comparisons<space>or<space>sorting<space>the<space>ObjectID.<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>number<closecurly><space>time<space>an<space>integer<space>number<space>representing<space>a<space>number<space>of<space>seconds.<lf>*<space><at>return<space><opencurly>ObjectID<closecurly><space>return<space>the<space>created<space>ObjectID<lf>*<solidus><lf>ObjectID.createFromTime<space>=<space>function<space>createFromTime<space><openparen>time<closeparen><space><opencurly><lf><space><space>var<space>buffer<space>=<space>new<space>Buffer<openparen><openbracket>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<closebracket><closeparen><semicolon><lf><space><space><solidus><solidus><space>Encode<space>time<space>into<space>first<space>4<space>bytes<lf><space><space>buffer<openbracket>3<closebracket><space>=<space>time<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>2<closebracket><space>=<space><openparen>time<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>1<closebracket><space>=<space><openparen>time<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>0<closebracket><space>=<space><openparen>time<space><gt><gt><space>24<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Return<space>the<space>new<space>objectId<lf><space><space>return<space>new<space>ObjectID<openparen>buffer<closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus><solidus><space>Lookup<space>tables<lf>var<space>encodeLookup<space>=<space><apos>0123456789abcdef<apos>.split<openparen><apos><apos><closeparen><lf>var<space>decodeLookup<space>=<space><openbracket><closebracket><lf>var<space>i<space>=<space>0<lf>while<space><openparen>i<space><lt><space>10<closeparen><space>decodeLookup<openbracket>0x30<space>+<space>i<closebracket><space>=<space>i++<lf>while<space><openparen>i<space><lt><space>16<closeparen><space>decodeLookup<openbracket>0x41<space>-<space>10<space>+<space>i<closebracket><space>=<space>decodeLookup<openbracket>0x61<space>-<space>10<space>+<space>i<closebracket><space>=<space>i++<lf><lf>var<space>_Buffer<space>=<space>Buffer<semicolon><lf>var<space>convertToHex<space>=<space>function<openparen>bytes<closeparen><space><opencurly><lf><space><space>return<space>bytes.toString<openparen><apos>hex<apos><closeparen><semicolon><lf><closecurly><lf><lf><solidus>**<lf>*<space>Creates<space>an<space>ObjectID<space>from<space>a<space>hex<space>string<space>representation<space>of<space>an<space>ObjectID.<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>string<closecurly><space>hexString<space>create<space>a<space>ObjectID<space>from<space>a<space>passed<space>in<space>24<space>byte<space>hexstring.<lf>*<space><at>return<space><opencurly>ObjectID<closecurly><space>return<space>the<space>created<space>ObjectID<lf>*<solidus><lf>ObjectID.createFromHexString<space>=<space>function<space>createFromHexString<space><openparen>string<closeparen><space><opencurly><lf><space><space><solidus><solidus><space>Throw<space>an<space>error<space>if<space>it<apos>s<space>not<space>a<space>valid<space>setup<lf><space><space>if<openparen>typeof<space>string<space>===<space><apos>undefined<apos><space>||<space>string<space>!=<space>null<space><amp><amp><space>string.length<space>!=<space>24<closeparen><space><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><quote>Argument<space>passed<space>in<space>must<space>be<space>a<space>single<space>String<space>of<space>12<space>bytes<space>or<space>a<space>string<space>of<space>24<space>hex<space>characters<quote><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Use<space>Buffer.from<space>method<space>if<space>available<lf><space><space>if<openparen>hasBufferType<closeparen><space>return<space>new<space>ObjectID<openparen>new<space>Buffer<openparen>string<comma><space><apos>hex<apos><closeparen><closeparen><semicolon><lf><lf><space><space><solidus><solidus><space>Calculate<space>lengths<lf><space><space>var<space>array<space>=<space>new<space>_Buffer<openparen>12<closeparen><semicolon><lf><space><space>var<space>n<space>=<space>0<semicolon><lf><space><space>var<space>i<space>=<space>0<semicolon><lf><lf><space><space>while<space><openparen>i<space><lt><space>24<closeparen><space><opencurly><lf><space><space><space><space>array<openbracket>n++<closebracket><space>=<space>decodeLookup<openbracket>string.charCodeAt<openparen>i++<closeparen><closebracket><space><lt><lt><space>4<space>|<space>decodeLookup<openbracket>string.charCodeAt<openparen>i++<closeparen><closebracket><lf><space><space><closecurly><lf><lf><space><space>return<space>new<space>ObjectID<openparen>array<closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Checks<space>if<space>a<space>value<space>is<space>a<space>valid<space>bson<space>ObjectId<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>boolean<closecurly><space>return<space>true<space>if<space>the<space>value<space>is<space>a<space>valid<space>bson<space>ObjectId<comma><space>return<space>false<space>otherwise.<lf>*<solidus><lf>ObjectID.isValid<space>=<space>function<space>isValid<openparen>id<closeparen><space><opencurly><lf><space><space>if<openparen>id<space>==<space>null<closeparen><space>return<space>false<semicolon><lf><lf><space><space>if<openparen>typeof<space>id<space>==<space><apos>number<apos><closeparen><space><opencurly><lf><space><space><space><space>return<space>true<semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>typeof<space>id<space>==<space><apos>string<apos><closeparen><space><opencurly><lf><space><space><space><space>return<space>id.length<space>==<space>12<space>||<space><openparen>id.length<space>==<space>24<space><amp><amp><space>checkForHexRegExp.test<openparen>id<closeparen><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>id<space>instanceof<space>ObjectID<closeparen><space><opencurly><lf><space><space><space><space>return<space>true<semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>id<space>instanceof<space>_Buffer<closeparen><space><opencurly><lf><space><space><space><space>return<space>true<semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Duck-Typing<space>detection<space>of<space>ObjectId<space>like<space>objects<lf><space><space>if<openparen>id.toHexString<closeparen><space><opencurly><lf><space><space><space><space>return<space>id.id.length<space>==<space>12<space>||<space><openparen>id.id.length<space>==<space>24<space><amp><amp><space>checkForHexRegExp.test<openparen>id.id<closeparen><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>return<space>false<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space><at>ignore<lf>*<solidus><lf>Object.defineProperty<openparen>ObjectID.prototype<comma><space><quote>generationTime<quote><comma><space><opencurly><lf><space><space><space>enumerable:<space>true<lf><space><comma><space>get:<space>function<space><openparen><closeparen><space><opencurly><lf><space><space><space><space><space>return<space>this.id<openbracket>3<closebracket><space>|<space>this.id<openbracket>2<closebracket><space><lt><lt><space>8<space>|<space>this.id<openbracket>1<closebracket><space><lt><lt><space>16<space>|<space>this.id<openbracket>0<closebracket><space><lt><lt><space>24<semicolon><lf><space><space><space><closecurly><lf><space><comma><space>set:<space>function<space><openparen>value<closeparen><space><opencurly><lf><space><space><space><space><space><solidus><solidus><space>Encode<space>time<space>into<space>first<space>4<space>bytes<lf><space><space><space><space><space>this.id<openbracket>3<closebracket><space>=<space>value<space><amp><space>0xff<semicolon><lf><space><space><space><space><space>this.id<openbracket>2<closebracket><space>=<space><openparen>value<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space><space><space><space>this.id<openbracket>1<closebracket><space>=<space><openparen>value<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space><space><space><space>this.id<openbracket>0<closebracket><space>=<space><openparen>value<space><gt><gt><space>24<closeparen><space><amp><space>0xff<semicolon><lf><space><space><space><closecurly><lf><closecurly><closeparen><semicolon><lf><lf><solidus>**<lf><space>*<space>Expose.<lf><space>*<solidus><lf>module.exports<space>=<space>ObjectID<semicolon><lf>module.exports.ObjectID<space>=<space>ObjectID<semicolon><lf>module.exports.ObjectId<space>=<space>ObjectID<semicolon><lf><lf><lf><solidus><solidus><space>FME<space>CODE<space>TO<space>CHECK<solidus>GENERATE<space>MONGODB<space>OBJECTID<apos>S<lf>fme.on<openparen><apos>feature<apos><comma><space><openparen>feature<closeparen><space>=<gt><space><opencurly><lf><space><space><space><space>operation<space>=<space>feature.getAttribute<openparen><apos>__operation_mode<apos><closeparen><lf><space><space><space><space>if<space><openparen>operation<space>==<space><apos>Validate<apos><closeparen><space><opencurly><lf><space><space><space><space><space><space><space><space>try<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>oid<space>=<space>feature.getAttribute<openparen><apos>mongodb_id<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>ObjectID<openparen>oid<closeparen><semicolon><lf><space><space><space><space><space><space><space><space><closecurly><space>catch<openparen>err<closeparen><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttribute<openparen><apos>mongodb_id_error<apos><comma><space>err.message<closeparen><semicolon><lf><space><space><space><space><space><space><space><space><space><space><space><space>fme.output<openparen>feature<closeparen><semicolon><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<semicolon><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space>oid<space>=<space>ObjectID<openparen><closeparen>.toJSON<openparen><closeparen><semicolon><lf><space><space><space><space><space><space><space><space>feature.setAttribute<openparen><apos>mongodb_id<apos><comma><space>oid<closeparen><semicolon><lf><space><space><space><space><closecurly><lf><space><space><space><space>fme.output<openparen>feature<closeparen><semicolon><lf><closecurly><closeparen><semicolon>,$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller)"    OUTPUT OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller_OUTPUT"
FACTORY_DEF $(USE_JAVASCRIPT_FACTORY) JavaScriptFactory    FACTORY_NAME $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller    INPUT  FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Input"    SOURCE_CODE "@EvaluateExpression(FDIV,STRING_ENCODED,var<space>fme<space>=<space>require<openparen><apos>fme<apos><closeparen><semicolon><lf>var<space>fmeobjects<space>=<space>require<openparen><apos>fmeobjects<apos><closeparen><semicolon><lf><lf><solidus><solidus><space>CODE<space>TO<space>GENERATE<space>A<space>BSON.ObjectID<lf><solidus><solidus><space>TAKEN<space>FROM<space>https:<solidus><solidus>github.com<solidus>mongodb<solidus>js-bson<solidus>blob<solidus>1.0-branch<solidus>lib<solidus>bson<solidus>objectid.js<lf><lf><solidus>**<lf><space>*<space>Machine<space>id.<lf><space>*<lf><space>*<space>Create<space>a<space>random<space>3-byte<space>value<space><openparen>i.e.<space>unique<space>for<space>this<lf><space>*<space>process<closeparen>.<space>Other<space>drivers<space>use<space>a<space>md5<space>of<space>the<space>machine<space>id<space>here<comma><space>but<lf><space>*<space>that<space>would<space>mean<space>an<space>asyc<space>call<space>to<space>gethostname<comma><space>so<space>we<space>don<apos>t<space>bother.<lf><space>*<space><at>ignore<lf><space>*<solidus><lf>var<space>MACHINE_ID<space>=<space>parseInt<openparen>Math.random<openparen><closeparen><space>*<space>0xFFFFFF<comma><space>10<closeparen><semicolon><lf><lf><solidus><solidus><space>Regular<space>expression<space>that<space>checks<space>for<space>hex<space>value<lf>var<space>checkForHexRegExp<space>=<space>new<space>RegExp<openparen><quote>^<openbracket>0-9a-fA-F<closebracket><opencurly>24<closecurly><dollar><quote><closeparen><semicolon><lf>var<space>hasBufferType<space>=<space>false<semicolon><lf><lf><solidus><solidus><space>Check<space>if<space>buffer<space>exists<lf>try<space><opencurly><lf><space><space>if<openparen>Buffer<space><amp><amp><space>Buffer.from<closeparen><space>hasBufferType<space>=<space>true<semicolon><lf><closecurly><space>catch<openparen>err<closeparen><space><opencurly><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Create<space>a<space>new<space>ObjectID<space>instance<lf>*<lf>*<space><at>class<lf>*<space><at>param<space><opencurly><openparen>string|number<closeparen><closecurly><space>id<space>Can<space>be<space>a<space>24<space>byte<space>hex<space>string<comma><space>12<space>byte<space>binary<space>string<space>or<space>a<space>Number.<lf>*<space><at>property<space><opencurly>number<closecurly><space>generationTime<space>The<space>generation<space>time<space>of<space>this<space>ObjectId<space>instance<lf>*<space><at>return<space><opencurly>ObjectID<closecurly><space>instance<space>of<space>ObjectID.<lf>*<solidus><lf>var<space>ObjectID<space>=<space>function<space>ObjectID<openparen>id<closeparen><space><opencurly><lf><space><space><solidus><solidus><space>Duck-typing<space>to<space>support<space>ObjectId<space>from<space>different<space>npm<space>packages<lf><space><space>if<openparen>id<space>instanceof<space>ObjectID<closeparen><space>return<space>id<semicolon><lf><space><space>if<openparen>!<openparen>this<space>instanceof<space>ObjectID<closeparen><closeparen><space>return<space>new<space>ObjectID<openparen>id<closeparen><semicolon><lf><lf><space><space>this._bsontype<space>=<space><apos>ObjectID<apos><semicolon><lf><lf><space><space><solidus><solidus><space>The<space>most<space>common<space>usecase<space><openparen>blank<space>id<comma><space>new<space>objectId<space>instance<closeparen><lf><space><space>if<openparen>id<space>==<space>null<space>||<space>typeof<space>id<space>==<space><apos>number<apos><closeparen><space><opencurly><lf><space><space><space><space><solidus><solidus><space>Generate<space>a<space>new<space>id<lf><space><space><space><space>this.id<space>=<space>this.generate<openparen>id<closeparen><semicolon><lf><space><space><space><space><solidus><solidus><space>If<space>we<space>are<space>caching<space>the<space>hex<space>string<lf><space><space><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>this.toString<openparen><apos>hex<apos><closeparen><semicolon><lf><space><space><space><space><solidus><solidus><space>Return<space>the<space>object<lf><space><space><space><space>return<semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Check<space>if<space>the<space>passed<space>in<space>id<space>is<space>valid<lf><space><space>var<space>valid<space>=<space>ObjectID.isValid<openparen>id<closeparen><semicolon><lf><lf><space><space><solidus><solidus><space>Throw<space>an<space>error<space>if<space>it<apos>s<space>not<space>a<space>valid<space>setup<lf><space><space>if<openparen>!valid<space><amp><amp><space>id<space>!=<space>null<closeparen><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><quote><apos>mongodb_id<apos><space>attribute<space>must<space>be<space>a<space>single<space>String<space>of<space>12<space>bytes<space>or<space>a<space>string<space>of<space>24<space>hex<space>characters<quote><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>valid<space><amp><amp><space>typeof<space>id<space>==<space><apos>string<apos><space><amp><amp><space>id.length<space>==<space>24<space><amp><amp><space>hasBufferType<closeparen><space><opencurly><lf><space><space><space><space>return<space>new<space>ObjectID<openparen>new<space>Buffer<openparen>id<comma><space><apos>hex<apos><closeparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>valid<space><amp><amp><space>typeof<space>id<space>==<space><apos>string<apos><space><amp><amp><space>id.length<space>==<space>24<closeparen><space><opencurly><lf><space><space><space><space>return<space>ObjectID.createFromHexString<openparen>id<closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>id<space>!=<space>null<space><amp><amp><space>id.length<space>===<space>12<closeparen><space><opencurly><lf><space><space><space><space><solidus><solidus><space>assume<space>12<space>byte<space>string<lf><space><space><space><space>this.id<space>=<space>id<semicolon><lf><space><space><closecurly><space>else<space>if<openparen>id<space>!=<space>null<space><amp><amp><space>id.toHexString<closeparen><space><opencurly><lf><space><space><space><space><solidus><solidus><space>Duck-typing<space>to<space>support<space>ObjectId<space>from<space>different<space>npm<space>packages<lf><space><space><space><space>return<space>id<semicolon><lf><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><quote><apos>mongodb_id<apos><space>attribute<space>must<space>be<space>a<space>single<space>String<space>of<space>12<space>bytes<space>or<space>a<space>string<space>of<space>24<space>hex<space>characters<quote><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>this.toString<openparen><apos>hex<apos><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus><solidus><space>Allow<space>usage<space>of<space>ObjectId<space>as<space>well<space>as<space>ObjectID<lf>var<space>ObjectId<space>=<space>ObjectID<semicolon><lf><lf><solidus><solidus><space>Precomputed<space>hex<space>table<space>enables<space>speedy<space>hex<space>string<space>conversion<lf>var<space>hexTable<space>=<space><openbracket><closebracket><semicolon><lf>for<space><openparen>var<space>i<space>=<space>0<semicolon><space>i<space><lt><space>256<semicolon><space>i++<closeparen><space><opencurly><lf><space><space>hexTable<openbracket>i<closebracket><space>=<space><openparen>i<space><lt>=<space>15<space>?<space><apos>0<apos><space>:<space><apos><apos><closeparen><space>+<space>i.toString<openparen>16<closeparen><semicolon><lf><closecurly><lf><lf><solidus>**<lf>*<space>Return<space>the<space>ObjectID<space>id<space>as<space>a<space>24<space>byte<space>hex<space>string<space>representation<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>string<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<solidus><lf>ObjectID.prototype.toHexString<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>if<openparen>ObjectID.cacheHexString<space><amp><amp><space>this.__id<closeparen><space>return<space>this.__id<semicolon><lf><lf><space><space>var<space>hexString<space>=<space><apos><apos><semicolon><lf><space><space>if<openparen>!this.id<space>||<space>!this.id.length<closeparen><space><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><apos>invalid<space>ObjectId<comma><space>ObjectId.id<space>must<space>be<space>either<space>a<space>string<space>or<space>a<space>Buffer<comma><space>but<space>is<space><openbracket><apos><space>+<space>JSON.stringify<openparen>this.id<closeparen><space>+<space><apos><closebracket><apos><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>this.id<space>instanceof<space>_Buffer<closeparen><space><opencurly><lf><space><space><space><space>hexString<space>=<space>convertToHex<openparen>this.id<closeparen><semicolon><lf><space><space><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>hexString<semicolon><lf><space><space><space><space>return<space>hexString<semicolon><lf><space><space><closecurly><lf><lf><space><space>for<space><openparen>var<space>i<space>=<space>0<semicolon><space>i<space><lt><space>this.id.length<semicolon><space>i++<closeparen><space><opencurly><lf><space><space><space><space>hexString<space>+=<space>hexTable<openbracket>this.id.charCodeAt<openparen>i<closeparen><closebracket><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>ObjectID.cacheHexString<closeparen><space>this.__id<space>=<space>hexString<semicolon><lf><space><space>return<space>hexString<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Update<space>the<space>ObjectID<space>index<space>used<space>in<space>generating<space>new<space>ObjectID<apos>s<space>on<space>the<space>driver<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>number<closecurly><space>returns<space>next<space>index<space>value.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.get_inc<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>return<space>ObjectID.index<space>=<space><openparen>ObjectID.index<space>+<space>1<closeparen><space>%<space>0xFFFFFF<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Update<space>the<space>ObjectID<space>index<space>used<space>in<space>generating<space>new<space>ObjectID<apos>s<space>on<space>the<space>driver<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>number<closecurly><space>returns<space>next<space>index<space>value.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.getInc<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>return<space>this.get_inc<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Generate<space>a<space>12<space>byte<space>id<space>buffer<space>used<space>in<space>ObjectID<apos>s<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>number<closecurly><space><openbracket>time<closebracket><space>optional<space>parameter<space>allowing<space>to<space>pass<space>in<space>a<space>second<space>based<space>timestamp.<lf>*<space><at>return<space><opencurly>Buffer<closecurly><space>return<space>the<space>12<space>byte<space>id<space>buffer<space>string.<lf>*<solidus><lf>ObjectID.prototype.generate<space>=<space>function<openparen>time<closeparen><space><opencurly><lf><space><space>if<space><openparen><apos>number<apos><space>!=<space>typeof<space>time<closeparen><space><opencurly><lf><space><space><space><space>time<space>=<space>~~<openparen>Date.now<openparen><closeparen><solidus>1000<closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Use<space>pid<lf><space><space>var<space>pid<space>=<space><openparen>typeof<space>process<space>===<space><apos>undefined<apos><space>?<space>Math.floor<openparen>Math.random<openparen><closeparen><space>*<space>100000<closeparen><space>:<space>process.pid<closeparen><space>%<space>0xFFFF<semicolon><lf><space><space>var<space>inc<space>=<space>this.get_inc<openparen><closeparen><semicolon><lf><space><space><solidus><solidus><space>Buffer<space>used<lf><space><space>var<space>buffer<space>=<space>new<space>Buffer<openparen>12<closeparen><semicolon><lf><space><space><solidus><solidus><space>Encode<space>time<lf><space><space>buffer<openbracket>3<closebracket><space>=<space>time<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>2<closebracket><space>=<space><openparen>time<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>1<closebracket><space>=<space><openparen>time<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>0<closebracket><space>=<space><openparen>time<space><gt><gt><space>24<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Encode<space>machine<lf><space><space>buffer<openbracket>6<closebracket><space>=<space>MACHINE_ID<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>5<closebracket><space>=<space><openparen>MACHINE_ID<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>4<closebracket><space>=<space><openparen>MACHINE_ID<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Encode<space>pid<lf><space><space>buffer<openbracket>8<closebracket><space>=<space>pid<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>7<closebracket><space>=<space><openparen>pid<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Encode<space>index<lf><space><space>buffer<openbracket>11<closebracket><space>=<space>inc<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>10<closebracket><space>=<space><openparen>inc<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>9<closebracket><space>=<space><openparen>inc<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Return<space>the<space>buffer<lf><space><space>return<space>buffer<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Converts<space>the<space>id<space>into<space>a<space>24<space>byte<space>hex<space>string<space>for<space>printing<lf>*<lf>*<space><at>param<space><opencurly>String<closecurly><space>format<space>The<space>Buffer<space>toString<space>format<space>parameter.<lf>*<space><at>return<space><opencurly>String<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.toString<space>=<space>function<openparen>format<closeparen><space><opencurly><lf><space><space><solidus><solidus><space>Is<space>the<space>id<space>a<space>buffer<space>then<space>use<space>the<space>buffer<space>toString<space>method<space>to<space>return<space>the<space>format<lf><space><space>if<openparen>this.id<space><amp><amp><space>this.id.copy<closeparen><space><opencurly><lf><space><space><space><space>return<space>this.id.toString<openparen>typeof<space>format<space>===<space><apos>string<apos><space>?<space>format<space>:<space><apos>hex<apos><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>if<openparen>this.buffer<space><closeparen><lf><space><space>return<space>this.toHexString<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Converts<space>to<space>a<space>string<space>representation<space>of<space>this<space>Id.<lf>*<lf>*<space><at>return<space><opencurly>String<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.inspect<space>=<space>ObjectID.prototype.toString<semicolon><lf><lf><solidus>**<lf>*<space>Converts<space>to<space>its<space>JSON<space>representation.<lf>*<lf>*<space><at>return<space><opencurly>String<closecurly><space>return<space>the<space>24<space>byte<space>hex<space>string<space>representation.<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.prototype.toJSON<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>return<space>this.toHexString<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Compares<space>the<space>equality<space>of<space>this<space>ObjectID<space>with<space>`otherID`.<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>object<closecurly><space>otherID<space>ObjectID<space>instance<space>to<space>compare<space>against.<lf>*<space><at>return<space><opencurly>boolean<closecurly><space>the<space>result<space>of<space>comparing<space>two<space>ObjectID<apos>s<lf>*<solidus><lf>ObjectID.prototype.equals<space>=<space>function<space>equals<space><openparen>otherId<closeparen><space><opencurly><lf><space><space>var<space>id<semicolon><lf><lf><space><space>if<openparen>otherId<space>instanceof<space>ObjectID<closeparen><space><opencurly><lf><space><space><space><space>return<space>this.toString<openparen><closeparen><space>==<space>otherId.toString<openparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>typeof<space>otherId<space>==<space><apos>string<apos><space><amp><amp><space>ObjectID.isValid<openparen>otherId<closeparen><space><amp><amp><space>otherId.length<space>==<space>12<space><amp><amp><space>this.id<space>instanceof<space>_Buffer<closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId<space>===<space>this.id.toString<openparen><apos>binary<apos><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>typeof<space>otherId<space>==<space><apos>string<apos><space><amp><amp><space>ObjectID.isValid<openparen>otherId<closeparen><space><amp><amp><space>otherId.length<space>==<space>24<closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId.toLowerCase<openparen><closeparen><space>===<space>this.toHexString<openparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space>if<openparen>typeof<space>otherId<space>==<space><apos>string<apos><space><amp><amp><space>ObjectID.isValid<openparen>otherId<closeparen><space><amp><amp><space>otherId.length<space>==<space>12<closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId<space>===<space>this.id<semicolon><lf><space><space><closecurly><space>else<space>if<openparen>otherId<space>!=<space>null<space><amp><amp><space><openparen>otherId<space>instanceof<space>ObjectID<space>||<space>otherId.toHexString<closeparen><closeparen><space><opencurly><lf><space><space><space><space>return<space>otherId.toHexString<openparen><closeparen><space>===<space>this.toHexString<openparen><closeparen><semicolon><lf><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space>return<space>false<semicolon><lf><space><space><closecurly><lf><closecurly><lf><lf><solidus>**<lf>*<space>Returns<space>the<space>generation<space>date<space><openparen>accurate<space>up<space>to<space>the<space>second<closeparen><space>that<space>this<space>ID<space>was<space>generated.<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>date<closecurly><space>the<space>generation<space>date<lf>*<solidus><lf>ObjectID.prototype.getTimestamp<space>=<space>function<openparen><closeparen><space><opencurly><lf><space><space>var<space>timestamp<space>=<space>new<space>Date<openparen><closeparen><semicolon><lf><space><space>var<space>time<space>=<space>this.id<openbracket>3<closebracket><space>|<space>this.id<openbracket>2<closebracket><space><lt><lt><space>8<space>|<space>this.id<openbracket>1<closebracket><space><lt><lt><space>16<space>|<space>this.id<openbracket>0<closebracket><space><lt><lt><space>24<semicolon><lf><space><space>timestamp.setTime<openparen>Math.floor<openparen>time<closeparen><space>*<space>1000<closeparen><semicolon><lf><space><space>return<space>timestamp<semicolon><lf><closecurly><lf><lf><solidus>**<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.index<space>=<space>~~<openparen>Math.random<openparen><closeparen><space>*<space>0xFFFFFF<closeparen><semicolon><lf><lf><solidus>**<lf>*<space><at>ignore<lf>*<solidus><lf>ObjectID.createPk<space>=<space>function<space>createPk<space><openparen><closeparen><space><opencurly><lf><space><space>return<space>new<space>ObjectID<openparen><closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Creates<space>an<space>ObjectID<space>from<space>a<space>second<space>based<space>number<comma><space>with<space>the<space>rest<space>of<space>the<space>ObjectID<space>zeroed<space>out.<space>Used<space>for<space>comparisons<space>or<space>sorting<space>the<space>ObjectID.<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>number<closecurly><space>time<space>an<space>integer<space>number<space>representing<space>a<space>number<space>of<space>seconds.<lf>*<space><at>return<space><opencurly>ObjectID<closecurly><space>return<space>the<space>created<space>ObjectID<lf>*<solidus><lf>ObjectID.createFromTime<space>=<space>function<space>createFromTime<space><openparen>time<closeparen><space><opencurly><lf><space><space>var<space>buffer<space>=<space>new<space>Buffer<openparen><openbracket>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<comma><space>0<closebracket><closeparen><semicolon><lf><space><space><solidus><solidus><space>Encode<space>time<space>into<space>first<space>4<space>bytes<lf><space><space>buffer<openbracket>3<closebracket><space>=<space>time<space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>2<closebracket><space>=<space><openparen>time<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>1<closebracket><space>=<space><openparen>time<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space>buffer<openbracket>0<closebracket><space>=<space><openparen>time<space><gt><gt><space>24<closeparen><space><amp><space>0xff<semicolon><lf><space><space><solidus><solidus><space>Return<space>the<space>new<space>objectId<lf><space><space>return<space>new<space>ObjectID<openparen>buffer<closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus><solidus><space>Lookup<space>tables<lf>var<space>encodeLookup<space>=<space><apos>0123456789abcdef<apos>.split<openparen><apos><apos><closeparen><lf>var<space>decodeLookup<space>=<space><openbracket><closebracket><lf>var<space>i<space>=<space>0<lf>while<space><openparen>i<space><lt><space>10<closeparen><space>decodeLookup<openbracket>0x30<space>+<space>i<closebracket><space>=<space>i++<lf>while<space><openparen>i<space><lt><space>16<closeparen><space>decodeLookup<openbracket>0x41<space>-<space>10<space>+<space>i<closebracket><space>=<space>decodeLookup<openbracket>0x61<space>-<space>10<space>+<space>i<closebracket><space>=<space>i++<lf><lf>var<space>_Buffer<space>=<space>Buffer<semicolon><lf>var<space>convertToHex<space>=<space>function<openparen>bytes<closeparen><space><opencurly><lf><space><space>return<space>bytes.toString<openparen><apos>hex<apos><closeparen><semicolon><lf><closecurly><lf><lf><solidus>**<lf>*<space>Creates<space>an<space>ObjectID<space>from<space>a<space>hex<space>string<space>representation<space>of<space>an<space>ObjectID.<lf>*<lf>*<space><at>method<lf>*<space><at>param<space><opencurly>string<closecurly><space>hexString<space>create<space>a<space>ObjectID<space>from<space>a<space>passed<space>in<space>24<space>byte<space>hexstring.<lf>*<space><at>return<space><opencurly>ObjectID<closecurly><space>return<space>the<space>created<space>ObjectID<lf>*<solidus><lf>ObjectID.createFromHexString<space>=<space>function<space>createFromHexString<space><openparen>string<closeparen><space><opencurly><lf><space><space><solidus><solidus><space>Throw<space>an<space>error<space>if<space>it<apos>s<space>not<space>a<space>valid<space>setup<lf><space><space>if<openparen>typeof<space>string<space>===<space><apos>undefined<apos><space>||<space>string<space>!=<space>null<space><amp><amp><space>string.length<space>!=<space>24<closeparen><space><opencurly><lf><space><space><space><space>throw<space>new<space>Error<openparen><quote>Argument<space>passed<space>in<space>must<space>be<space>a<space>single<space>String<space>of<space>12<space>bytes<space>or<space>a<space>string<space>of<space>24<space>hex<space>characters<quote><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Use<space>Buffer.from<space>method<space>if<space>available<lf><space><space>if<openparen>hasBufferType<closeparen><space>return<space>new<space>ObjectID<openparen>new<space>Buffer<openparen>string<comma><space><apos>hex<apos><closeparen><closeparen><semicolon><lf><lf><space><space><solidus><solidus><space>Calculate<space>lengths<lf><space><space>var<space>array<space>=<space>new<space>_Buffer<openparen>12<closeparen><semicolon><lf><space><space>var<space>n<space>=<space>0<semicolon><lf><space><space>var<space>i<space>=<space>0<semicolon><lf><lf><space><space>while<space><openparen>i<space><lt><space>24<closeparen><space><opencurly><lf><space><space><space><space>array<openbracket>n++<closebracket><space>=<space>decodeLookup<openbracket>string.charCodeAt<openparen>i++<closeparen><closebracket><space><lt><lt><space>4<space>|<space>decodeLookup<openbracket>string.charCodeAt<openparen>i++<closeparen><closebracket><lf><space><space><closecurly><lf><lf><space><space>return<space>new<space>ObjectID<openparen>array<closeparen><semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space>Checks<space>if<space>a<space>value<space>is<space>a<space>valid<space>bson<space>ObjectId<lf>*<lf>*<space><at>method<lf>*<space><at>return<space><opencurly>boolean<closecurly><space>return<space>true<space>if<space>the<space>value<space>is<space>a<space>valid<space>bson<space>ObjectId<comma><space>return<space>false<space>otherwise.<lf>*<solidus><lf>ObjectID.isValid<space>=<space>function<space>isValid<openparen>id<closeparen><space><opencurly><lf><space><space>if<openparen>id<space>==<space>null<closeparen><space>return<space>false<semicolon><lf><lf><space><space>if<openparen>typeof<space>id<space>==<space><apos>number<apos><closeparen><space><opencurly><lf><space><space><space><space>return<space>true<semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>typeof<space>id<space>==<space><apos>string<apos><closeparen><space><opencurly><lf><space><space><space><space>return<space>id.length<space>==<space>12<space>||<space><openparen>id.length<space>==<space>24<space><amp><amp><space>checkForHexRegExp.test<openparen>id<closeparen><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>id<space>instanceof<space>ObjectID<closeparen><space><opencurly><lf><space><space><space><space>return<space>true<semicolon><lf><space><space><closecurly><lf><lf><space><space>if<openparen>id<space>instanceof<space>_Buffer<closeparen><space><opencurly><lf><space><space><space><space>return<space>true<semicolon><lf><space><space><closecurly><lf><lf><space><space><solidus><solidus><space>Duck-Typing<space>detection<space>of<space>ObjectId<space>like<space>objects<lf><space><space>if<openparen>id.toHexString<closeparen><space><opencurly><lf><space><space><space><space>return<space>id.id.length<space>==<space>12<space>||<space><openparen>id.id.length<space>==<space>24<space><amp><amp><space>checkForHexRegExp.test<openparen>id.id<closeparen><closeparen><semicolon><lf><space><space><closecurly><lf><lf><space><space>return<space>false<semicolon><lf><closecurly><semicolon><lf><lf><solidus>**<lf>*<space><at>ignore<lf>*<solidus><lf>Object.defineProperty<openparen>ObjectID.prototype<comma><space><quote>generationTime<quote><comma><space><opencurly><lf><space><space><space>enumerable:<space>true<lf><space><comma><space>get:<space>function<space><openparen><closeparen><space><opencurly><lf><space><space><space><space><space>return<space>this.id<openbracket>3<closebracket><space>|<space>this.id<openbracket>2<closebracket><space><lt><lt><space>8<space>|<space>this.id<openbracket>1<closebracket><space><lt><lt><space>16<space>|<space>this.id<openbracket>0<closebracket><space><lt><lt><space>24<semicolon><lf><space><space><space><closecurly><lf><space><comma><space>set:<space>function<space><openparen>value<closeparen><space><opencurly><lf><space><space><space><space><space><solidus><solidus><space>Encode<space>time<space>into<space>first<space>4<space>bytes<lf><space><space><space><space><space>this.id<openbracket>3<closebracket><space>=<space>value<space><amp><space>0xff<semicolon><lf><space><space><space><space><space>this.id<openbracket>2<closebracket><space>=<space><openparen>value<space><gt><gt><space>8<closeparen><space><amp><space>0xff<semicolon><lf><space><space><space><space><space>this.id<openbracket>1<closebracket><space>=<space><openparen>value<space><gt><gt><space>16<closeparen><space><amp><space>0xff<semicolon><lf><space><space><space><space><space>this.id<openbracket>0<closebracket><space>=<space><openparen>value<space><gt><gt><space>24<closeparen><space><amp><space>0xff<semicolon><lf><space><space><space><closecurly><lf><closecurly><closeparen><semicolon><lf><lf><solidus>**<lf><space>*<space>Expose.<lf><space>*<solidus><lf>module.exports<space>=<space>ObjectID<semicolon><lf>module.exports.ObjectID<space>=<space>ObjectID<semicolon><lf>module.exports.ObjectId<space>=<space>ObjectID<semicolon><lf><lf><lf><solidus><solidus><space>FME<space>CODE<space>TO<space>CHECK<solidus>GENERATE<space>MONGODB<space>OBJECTID<apos>S<lf>fme.on<openparen><apos>feature<apos><comma><space><openparen>feature<closeparen><space>=<gt><space><opencurly><lf><space><space><space><space>operation<space>=<space>feature.getAttribute<openparen><apos>__operation_mode<apos><closeparen><lf><space><space><space><space>if<space><openparen>operation<space>==<space><apos>Validate<apos><closeparen><space><opencurly><lf><space><space><space><space><space><space><space><space>try<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>oid<space>=<space>feature.getAttribute<openparen><apos>mongodb_id<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>ObjectID<openparen>oid<closeparen><semicolon><lf><space><space><space><space><space><space><space><space><closecurly><space>catch<openparen>err<closeparen><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttribute<openparen><apos>mongodb_id_error<apos><comma><space>err.message<closeparen><semicolon><lf><space><space><space><space><space><space><space><space><space><space><space><space>fme.output<openparen>feature<closeparen><semicolon><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<semicolon><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space>oid<space>=<space>ObjectID<openparen><closeparen>.toJSON<openparen><closeparen><semicolon><lf><space><space><space><space><space><space><space><space>feature.setAttribute<openparen><apos>mongodb_id<apos><comma><space>oid<closeparen><semicolon><lf><space><space><space><space><closecurly><lf><space><space><space><space>fme.output<openparen>feature<closeparen><semicolon><lf><closecurly><closeparen><semicolon>,$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller)"    OUTPUT OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller_OUTPUT"

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Tester    INPUT  FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_JavaScriptCaller_OUTPUT"    TEST @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>mongodb_id_error<closeparen>,$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Tester) NOT_ATTRIBUTE_HAS_VALUE "" ENCODED    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FAILED FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Tester_FAILED"
# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_2    INPUT  FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Tester_FAILED"    OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"        @RemoveAttributes(fme_encoded,__operation_mode)        @RemoveAttributes(fme_pcre_match"$($(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP)")

# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,__operation_mode,mongodb_id_error)        @RemoveAttributes(fme_pcre_match"$($(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")

FACTORY_DEF * TeeFactory   FACTORY_NAME "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Output1505811106 Output Collector"   INPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_<Rejected>1505811106 Output Collector"   INPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"   OUTPUT FEATURE_TYPE "$(MongoDBObjectIDGenerator_WORKSPACE_NAME)_<Rejected>"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(MongoDBObjectIDGenerator_WORKSPACE_NAME))}]
